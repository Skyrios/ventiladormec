
Sprint 9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  00002206  0000229a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002206  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000023e  00800170  00800170  0000230a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000230a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000233c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00002380  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001186  00000000  00000000  00002498  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000917  00000000  00000000  0000361e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016e3  00000000  00000000  00003f35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000448  00000000  00000000  00005618  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008925  00000000  00000000  00005a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000973  00000000  00000000  0000e385  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000ecf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003006  00000000  00000000  0000edb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 df 02 	jmp	0x5be	; 0x5be <__vector_1>
       8:	0c 94 27 03 	jmp	0x64e	; 0x64e <__vector_2>
       c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__vector_3>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_18>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e6 e0       	ldi	r30, 0x06	; 6
     25c:	f2 e2       	ldi	r31, 0x22	; 34
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a0 37       	cpi	r26, 0x70	; 112
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a0 e7       	ldi	r26, 0x70	; 112
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	ae 3a       	cpi	r26, 0xAE	; 174
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 56 04 	call	0x8ac	; 0x8ac <main>
     27e:	0c 94 01 11 	jmp	0x2202	; 0x2202 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_18>:
char EQ[9] = {0,0,0,0,0,0,0,0,0};
char EL[9] = {0,0,0,0,0,0,0,0,0};
void respirar (uint8_t);

ISR(USART_RX_vect)
{			
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     28e:	0f 92       	push	r0
     290:	11 24       	eor	r1, r1
     292:	0f 93       	push	r16
     294:	1f 93       	push	r17
     296:	2f 93       	push	r18
     298:	3f 93       	push	r19
     29a:	4f 93       	push	r20
     29c:	5f 93       	push	r21
     29e:	6f 93       	push	r22
     2a0:	7f 93       	push	r23
     2a2:	8f 93       	push	r24
     2a4:	9f 93       	push	r25
     2a6:	af 93       	push	r26
     2a8:	bf 93       	push	r27
     2aa:	ef 93       	push	r30
     2ac:	ff 93       	push	r31
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
	if(posicao > 8)
     2b6:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     2ba:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     2be:	09 97       	sbiw	r24, 0x09	; 9
     2c0:	24 f0       	brlt	.+8      	; 0x2ca <__vector_18+0x44>
		posicao = 0;
     2c2:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
     2c6:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
	
	recebido[posicao] = UDR0;
     2ca:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     2ce:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     2d2:	26 ec       	ldi	r18, 0xC6	; 198
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	f9 01       	movw	r30, r18
     2d8:	20 81       	ld	r18, Z
     2da:	8c 5f       	subi	r24, 0xFC	; 252
     2dc:	9e 4f       	sbci	r25, 0xFE	; 254
     2de:	fc 01       	movw	r30, r24
     2e0:	20 83       	st	Z, r18
	dados[posicao] = recebido[posicao];	
     2e2:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     2e6:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     2ea:	20 91 7d 01 	lds	r18, 0x017D	; 0x80017d <posicao>
     2ee:	30 91 7e 01 	lds	r19, 0x017E	; 0x80017e <posicao+0x1>
     2f2:	2c 5f       	subi	r18, 0xFC	; 252
     2f4:	3e 4f       	sbci	r19, 0xFE	; 254
     2f6:	f9 01       	movw	r30, r18
     2f8:	20 81       	ld	r18, Z
     2fa:	83 5f       	subi	r24, 0xF3	; 243
     2fc:	9e 4f       	sbci	r25, 0xFE	; 254
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
	if(recebido[posicao] >= '0' && recebido[posicao] <= '9')
     302:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     306:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     30a:	8c 5f       	subi	r24, 0xFC	; 252
     30c:	9e 4f       	sbci	r25, 0xFE	; 254
     30e:	fc 01       	movw	r30, r24
     310:	80 81       	ld	r24, Z
     312:	80 33       	cpi	r24, 0x30	; 48
     314:	98 f0       	brcs	.+38     	; 0x33c <__vector_18+0xb6>
     316:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     31a:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     31e:	8c 5f       	subi	r24, 0xFC	; 252
     320:	9e 4f       	sbci	r25, 0xFE	; 254
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	8a 33       	cpi	r24, 0x3A	; 58
     328:	48 f4       	brcc	.+18     	; 0x33c <__vector_18+0xb6>
			recebido[posicao] = 'n';		
     32a:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     32e:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     332:	8c 5f       	subi	r24, 0xFC	; 252
     334:	9e 4f       	sbci	r25, 0xFE	; 254
     336:	2e e6       	ldi	r18, 0x6E	; 110
     338:	fc 01       	movw	r30, r24
     33a:	20 83       	st	Z, r18
	posicao++;	
     33c:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     340:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     344:	01 96       	adiw	r24, 0x01	; 1
     346:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <posicao+0x1>
     34a:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <posicao>
	cont_int++;
     34e:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <cont_int>
     352:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <cont_int+0x1>
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <cont_int+0x1>
     35c:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <cont_int>
	
	if(z == 1){
     360:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
     364:	81 30       	cpi	r24, 0x01	; 1
     366:	01 f5       	brne	.+64     	; 0x3a8 <__vector_18+0x122>
		eeprom_write_byte(posicao,dados[posicao]);
     368:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     36c:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     370:	83 5f       	subi	r24, 0xF3	; 243
     372:	9e 4f       	sbci	r25, 0xFE	; 254
     374:	fc 01       	movw	r30, r24
     376:	20 81       	ld	r18, Z
     378:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     37c:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     380:	62 2f       	mov	r22, r18
     382:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <eeprom_write_byte>
		EP[posicao] = eeprom_read_byte(posicao);
     386:	00 91 7d 01 	lds	r16, 0x017D	; 0x80017d <posicao>
     38a:	10 91 7e 01 	lds	r17, 0x017E	; 0x80017e <posicao+0x1>
     38e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     392:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     396:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <eeprom_read_byte>
     39a:	28 2f       	mov	r18, r24
     39c:	c8 01       	movw	r24, r16
     39e:	89 57       	subi	r24, 0x79	; 121
     3a0:	9e 4f       	sbci	r25, 0xFE	; 254
     3a2:	fc 01       	movw	r30, r24
     3a4:	20 83       	st	Z, r18
		EL[posicao] = eeprom_read_byte(posicao);
	
	}else if(z == 5){
		z = 1;
	}
	}
     3a6:	73 c0       	rjmp	.+230    	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
	cont_int++;
	
	if(z == 1){
		eeprom_write_byte(posicao,dados[posicao]);
		EP[posicao] = eeprom_read_byte(posicao);
	} else if(z == 2){
     3a8:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
     3ac:	82 30       	cpi	r24, 0x02	; 2
     3ae:	01 f5       	brne	.+64     	; 0x3f0 <__vector_18+0x16a>
		eeprom_write_byte(posicao,dados[posicao]);
     3b0:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     3b4:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     3b8:	83 5f       	subi	r24, 0xF3	; 243
     3ba:	9e 4f       	sbci	r25, 0xFE	; 254
     3bc:	fc 01       	movw	r30, r24
     3be:	20 81       	ld	r18, Z
     3c0:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     3c4:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     3c8:	62 2f       	mov	r22, r18
     3ca:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <eeprom_write_byte>
		EZ[posicao] = eeprom_read_byte(posicao);
     3ce:	00 91 7d 01 	lds	r16, 0x017D	; 0x80017d <posicao>
     3d2:	10 91 7e 01 	lds	r17, 0x017E	; 0x80017e <posicao+0x1>
     3d6:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     3da:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     3de:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <eeprom_read_byte>
     3e2:	28 2f       	mov	r18, r24
     3e4:	c8 01       	movw	r24, r16
     3e6:	80 57       	subi	r24, 0x70	; 112
     3e8:	9e 4f       	sbci	r25, 0xFE	; 254
     3ea:	fc 01       	movw	r30, r24
     3ec:	20 83       	st	Z, r18
		EL[posicao] = eeprom_read_byte(posicao);
	
	}else if(z == 5){
		z = 1;
	}
	}
     3ee:	4f c0       	rjmp	.+158    	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
		eeprom_write_byte(posicao,dados[posicao]);
		EP[posicao] = eeprom_read_byte(posicao);
	} else if(z == 2){
		eeprom_write_byte(posicao,dados[posicao]);
		EZ[posicao] = eeprom_read_byte(posicao);
	}else if(z == 3){
     3f0:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
     3f4:	83 30       	cpi	r24, 0x03	; 3
     3f6:	01 f5       	brne	.+64     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
		eeprom_write_byte(posicao,dados[posicao]);
     3f8:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     3fc:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     400:	83 5f       	subi	r24, 0xF3	; 243
     402:	9e 4f       	sbci	r25, 0xFE	; 254
     404:	fc 01       	movw	r30, r24
     406:	20 81       	ld	r18, Z
     408:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     40c:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     410:	62 2f       	mov	r22, r18
     412:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <eeprom_write_byte>
		EQ[posicao] = eeprom_read_byte(posicao);
     416:	00 91 7d 01 	lds	r16, 0x017D	; 0x80017d <posicao>
     41a:	10 91 7e 01 	lds	r17, 0x017E	; 0x80017e <posicao+0x1>
     41e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     422:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     426:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <eeprom_read_byte>
     42a:	28 2f       	mov	r18, r24
     42c:	c8 01       	movw	r24, r16
     42e:	87 56       	subi	r24, 0x67	; 103
     430:	9e 4f       	sbci	r25, 0xFE	; 254
     432:	fc 01       	movw	r30, r24
     434:	20 83       	st	Z, r18
		EL[posicao] = eeprom_read_byte(posicao);
	
	}else if(z == 5){
		z = 1;
	}
	}
     436:	2b c0       	rjmp	.+86     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
		eeprom_write_byte(posicao,dados[posicao]);
		EZ[posicao] = eeprom_read_byte(posicao);
	}else if(z == 3){
		eeprom_write_byte(posicao,dados[posicao]);
		EQ[posicao] = eeprom_read_byte(posicao);
	}else if (z == 4){
     438:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
     43c:	84 30       	cpi	r24, 0x04	; 4
     43e:	01 f5       	brne	.+64     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
		eeprom_write_byte(posicao,dados[posicao]);
     440:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     444:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     448:	83 5f       	subi	r24, 0xF3	; 243
     44a:	9e 4f       	sbci	r25, 0xFE	; 254
     44c:	fc 01       	movw	r30, r24
     44e:	20 81       	ld	r18, Z
     450:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     454:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     458:	62 2f       	mov	r22, r18
     45a:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <eeprom_write_byte>
		EL[posicao] = eeprom_read_byte(posicao);
     45e:	00 91 7d 01 	lds	r16, 0x017D	; 0x80017d <posicao>
     462:	10 91 7e 01 	lds	r17, 0x017E	; 0x80017e <posicao+0x1>
     466:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     46a:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     46e:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <eeprom_read_byte>
     472:	28 2f       	mov	r18, r24
     474:	c8 01       	movw	r24, r16
     476:	8e 55       	subi	r24, 0x5E	; 94
     478:	9e 4f       	sbci	r25, 0xFE	; 254
     47a:	fc 01       	movw	r30, r24
     47c:	20 83       	st	Z, r18
	
	}else if(z == 5){
		z = 1;
	}
	}
     47e:	07 c0       	rjmp	.+14     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
		EQ[posicao] = eeprom_read_byte(posicao);
	}else if (z == 4){
		eeprom_write_byte(posicao,dados[posicao]);
		EL[posicao] = eeprom_read_byte(posicao);
	
	}else if(z == 5){
     480:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
     484:	85 30       	cpi	r24, 0x05	; 5
     486:	19 f4       	brne	.+6      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
		z = 1;
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
	}
	}
     48e:	00 00       	nop
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	ff 91       	pop	r31
     496:	ef 91       	pop	r30
     498:	bf 91       	pop	r27
     49a:	af 91       	pop	r26
     49c:	9f 91       	pop	r25
     49e:	8f 91       	pop	r24
     4a0:	7f 91       	pop	r23
     4a2:	6f 91       	pop	r22
     4a4:	5f 91       	pop	r21
     4a6:	4f 91       	pop	r20
     4a8:	3f 91       	pop	r19
     4aa:	2f 91       	pop	r18
     4ac:	1f 91       	pop	r17
     4ae:	0f 91       	pop	r16
     4b0:	0f 90       	pop	r0
     4b2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     4b6:	0f 90       	pop	r0
     4b8:	1f 90       	pop	r1
     4ba:	18 95       	reti

000004bc <__vector_14>:

ISR(TIMER0_COMPA_vect){
     4bc:	1f 92       	push	r1
     4be:	0f 92       	push	r0
     4c0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     4c4:	0f 92       	push	r0
     4c6:	11 24       	eor	r1, r1
     4c8:	2f 93       	push	r18
     4ca:	3f 93       	push	r19
     4cc:	4f 93       	push	r20
     4ce:	5f 93       	push	r21
     4d0:	6f 93       	push	r22
     4d2:	7f 93       	push	r23
     4d4:	8f 93       	push	r24
     4d6:	9f 93       	push	r25
     4d8:	af 93       	push	r26
     4da:	bf 93       	push	r27
     4dc:	ef 93       	push	r30
     4de:	ff 93       	push	r31
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
     4e4:	00 d0       	rcall	.+0      	; 0x4e6 <__vector_14+0x2a>
     4e6:	cd b7       	in	r28, 0x3d	; 61
     4e8:	de b7       	in	r29, 0x3e	; 62
	tempo++;
     4ea:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <tempo>
     4ee:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <tempo+0x1>
     4f2:	01 96       	adiw	r24, 0x01	; 1
     4f4:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <tempo+0x1>
     4f8:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <tempo>
	tempo_ms++;
     4fc:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     500:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__data_end+0x1>
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <__data_end+0x1>
     50a:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <__data_end>
	
	uint16_t delay;
	delay = (uint16_t) 3750/FreqRespiracao;
     50e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <FreqRespiracao>
     512:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     516:	86 ea       	ldi	r24, 0xA6	; 166
     518:	9e e0       	ldi	r25, 0x0E	; 14
     51a:	b9 01       	movw	r22, r18
     51c:	0e 94 87 10 	call	0x210e	; 0x210e <__udivmodhi4>
     520:	cb 01       	movw	r24, r22
     522:	9a 83       	std	Y+2, r25	; 0x02
     524:	89 83       	std	Y+1, r24	; 0x01
	
	if(tempo == delay){
     526:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <tempo>
     52a:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <tempo+0x1>
     52e:	89 81       	ldd	r24, Y+1	; 0x01
     530:	9a 81       	ldd	r25, Y+2	; 0x02
     532:	28 17       	cp	r18, r24
     534:	39 07       	cpc	r19, r25
     536:	99 f4       	brne	.+38     	; 0x55e <__vector_14+0xa2>
		respirar(cont);
     538:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <cont>
     53c:	0e 94 61 08 	call	0x10c2	; 0x10c2 <respirar>
		tempo = 0;
     540:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <tempo+0x1>
     544:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <tempo>
		cont++;
     548:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <cont>
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <cont>
		if(cont >= 17)
     552:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <cont>
     556:	81 31       	cpi	r24, 0x11	; 17
     558:	10 f0       	brcs	.+4      	; 0x55e <__vector_14+0xa2>
			cont = 0;
     55a:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <cont>
	}		
		if(FreqRespiracao > 30){
     55e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     562:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     566:	4f 97       	sbiw	r24, 0x1f	; 31
     568:	38 f0       	brcs	.+14     	; 0x578 <__vector_14+0xbc>
			FreqRespiracao = 30;
     56a:	8e e1       	ldi	r24, 0x1E	; 30
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqRespiracao+0x1>
     572:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqRespiracao>

		}
		else if (FreqRespiracao < 5){
			FreqRespiracao = 5;
		}
}
     576:	0c c0       	rjmp	.+24     	; 0x590 <__vector_14+0xd4>
	}		
		if(FreqRespiracao > 30){
			FreqRespiracao = 30;

		}
		else if (FreqRespiracao < 5){
     578:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     57c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     580:	05 97       	sbiw	r24, 0x05	; 5
     582:	30 f4       	brcc	.+12     	; 0x590 <__vector_14+0xd4>
			FreqRespiracao = 5;
     584:	85 e0       	ldi	r24, 0x05	; 5
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqRespiracao+0x1>
     58c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqRespiracao>
		}
}
     590:	00 00       	nop
     592:	0f 90       	pop	r0
     594:	0f 90       	pop	r0
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	ff 91       	pop	r31
     59c:	ef 91       	pop	r30
     59e:	bf 91       	pop	r27
     5a0:	af 91       	pop	r26
     5a2:	9f 91       	pop	r25
     5a4:	8f 91       	pop	r24
     5a6:	7f 91       	pop	r23
     5a8:	6f 91       	pop	r22
     5aa:	5f 91       	pop	r21
     5ac:	4f 91       	pop	r20
     5ae:	3f 91       	pop	r19
     5b0:	2f 91       	pop	r18
     5b2:	0f 90       	pop	r0
     5b4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     5b8:	0f 90       	pop	r0
     5ba:	1f 90       	pop	r1
     5bc:	18 95       	reti

000005be <__vector_1>:

ISR(INT0_vect){
     5be:	1f 92       	push	r1
     5c0:	0f 92       	push	r0
     5c2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     5c6:	0f 92       	push	r0
     5c8:	11 24       	eor	r1, r1
     5ca:	2f 93       	push	r18
     5cc:	3f 93       	push	r19
     5ce:	8f 93       	push	r24
     5d0:	9f 93       	push	r25
     5d2:	ef 93       	push	r30
     5d4:	ff 93       	push	r31
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
	switch(selecao)
     5de:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <selecao>
     5e2:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <selecao+0x1>
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	91 05       	cpc	r25, r1
     5ea:	19 f0       	breq	.+6      	; 0x5f2 <__vector_1+0x34>
     5ec:	02 97       	sbiw	r24, 0x02	; 2
     5ee:	59 f0       	breq	.+22     	; 0x606 <__vector_1+0x48>
		case 2:
			if(OCR1A < 4000)
				OCR1A += 200;
		break;		
	}
}
     5f0:	1f c0       	rjmp	.+62     	; 0x630 <__vector_1+0x72>

ISR(INT0_vect){
	switch(selecao)
	{
		case 1:
			FreqRespiracao++;
     5f2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     5f6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqRespiracao+0x1>
     600:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqRespiracao>
		break;
     604:	15 c0       	rjmp	.+42     	; 0x630 <__vector_1+0x72>
		case 2:
			if(OCR1A < 4000)
     606:	88 e8       	ldi	r24, 0x88	; 136
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	fc 01       	movw	r30, r24
     60c:	80 81       	ld	r24, Z
     60e:	91 81       	ldd	r25, Z+1	; 0x01
     610:	80 3a       	cpi	r24, 0xA0	; 160
     612:	9f 40       	sbci	r25, 0x0F	; 15
     614:	60 f4       	brcc	.+24     	; 0x62e <__vector_1+0x70>
				OCR1A += 200;
     616:	88 e8       	ldi	r24, 0x88	; 136
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	28 e8       	ldi	r18, 0x88	; 136
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	f9 01       	movw	r30, r18
     620:	20 81       	ld	r18, Z
     622:	31 81       	ldd	r19, Z+1	; 0x01
     624:	28 53       	subi	r18, 0x38	; 56
     626:	3f 4f       	sbci	r19, 0xFF	; 255
     628:	fc 01       	movw	r30, r24
     62a:	31 83       	std	Z+1, r19	; 0x01
     62c:	20 83       	st	Z, r18
		break;		
     62e:	00 00       	nop
	}
}
     630:	00 00       	nop
     632:	df 91       	pop	r29
     634:	cf 91       	pop	r28
     636:	ff 91       	pop	r31
     638:	ef 91       	pop	r30
     63a:	9f 91       	pop	r25
     63c:	8f 91       	pop	r24
     63e:	3f 91       	pop	r19
     640:	2f 91       	pop	r18
     642:	0f 90       	pop	r0
     644:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     648:	0f 90       	pop	r0
     64a:	1f 90       	pop	r1
     64c:	18 95       	reti

0000064e <__vector_2>:

ISR(INT1_vect){
     64e:	1f 92       	push	r1
     650:	0f 92       	push	r0
     652:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     656:	0f 92       	push	r0
     658:	11 24       	eor	r1, r1
     65a:	2f 93       	push	r18
     65c:	3f 93       	push	r19
     65e:	8f 93       	push	r24
     660:	9f 93       	push	r25
     662:	ef 93       	push	r30
     664:	ff 93       	push	r31
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	cd b7       	in	r28, 0x3d	; 61
     66c:	de b7       	in	r29, 0x3e	; 62
	
		switch(selecao)
     66e:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <selecao>
     672:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <selecao+0x1>
     676:	81 30       	cpi	r24, 0x01	; 1
     678:	91 05       	cpc	r25, r1
     67a:	19 f0       	breq	.+6      	; 0x682 <__vector_2+0x34>
     67c:	02 97       	sbiw	r24, 0x02	; 2
     67e:	59 f0       	breq	.+22     	; 0x696 <__vector_2+0x48>
			case 2:
				if(OCR1A > 2000)
					OCR1A -= 200;
			break;			
		}
}
     680:	1f c0       	rjmp	.+62     	; 0x6c0 <__vector_2+0x72>
ISR(INT1_vect){
	
		switch(selecao)
		{
			case 1:
				FreqRespiracao--;
     682:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     686:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     68a:	01 97       	sbiw	r24, 0x01	; 1
     68c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqRespiracao+0x1>
     690:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqRespiracao>
			break;
     694:	15 c0       	rjmp	.+42     	; 0x6c0 <__vector_2+0x72>
			case 2:
				if(OCR1A > 2000)
     696:	88 e8       	ldi	r24, 0x88	; 136
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	fc 01       	movw	r30, r24
     69c:	80 81       	ld	r24, Z
     69e:	91 81       	ldd	r25, Z+1	; 0x01
     6a0:	81 3d       	cpi	r24, 0xD1	; 209
     6a2:	97 40       	sbci	r25, 0x07	; 7
     6a4:	60 f0       	brcs	.+24     	; 0x6be <__vector_2+0x70>
					OCR1A -= 200;
     6a6:	88 e8       	ldi	r24, 0x88	; 136
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	28 e8       	ldi	r18, 0x88	; 136
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	f9 01       	movw	r30, r18
     6b0:	20 81       	ld	r18, Z
     6b2:	31 81       	ldd	r19, Z+1	; 0x01
     6b4:	28 5c       	subi	r18, 0xC8	; 200
     6b6:	31 09       	sbc	r19, r1
     6b8:	fc 01       	movw	r30, r24
     6ba:	31 83       	std	Z+1, r19	; 0x01
     6bc:	20 83       	st	Z, r18
			break;			
     6be:	00 00       	nop
		}
}
     6c0:	00 00       	nop
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	ff 91       	pop	r31
     6c8:	ef 91       	pop	r30
     6ca:	9f 91       	pop	r25
     6cc:	8f 91       	pop	r24
     6ce:	3f 91       	pop	r19
     6d0:	2f 91       	pop	r18
     6d2:	0f 90       	pop	r0
     6d4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     6d8:	0f 90       	pop	r0
     6da:	1f 90       	pop	r1
     6dc:	18 95       	reti

000006de <__vector_5>:

ISR(PCINT2_vect)
{
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     6e6:	0f 92       	push	r0
     6e8:	11 24       	eor	r1, r1
     6ea:	2f 93       	push	r18
     6ec:	3f 93       	push	r19
     6ee:	4f 93       	push	r20
     6f0:	5f 93       	push	r21
     6f2:	6f 93       	push	r22
     6f4:	7f 93       	push	r23
     6f6:	8f 93       	push	r24
     6f8:	9f 93       	push	r25
     6fa:	af 93       	push	r26
     6fc:	bf 93       	push	r27
     6fe:	ef 93       	push	r30
     700:	ff 93       	push	r31
     702:	cf 93       	push	r28
     704:	df 93       	push	r29
     706:	1f 92       	push	r1
     708:	cd b7       	in	r28, 0x3d	; 61
     70a:	de b7       	in	r29, 0x3e	; 62
		uint8_t PINO_D4 =  PIND & 0b00010000;
     70c:	89 e2       	ldi	r24, 0x29	; 41
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	fc 01       	movw	r30, r24
     712:	80 81       	ld	r24, Z
     714:	80 71       	andi	r24, 0x10	; 16
     716:	89 83       	std	Y+1, r24	; 0x01
		static uint16_t t_up=0,t_down=0,t_aux=0;		
		
		if(PINO_D4 == 16)
     718:	89 81       	ldd	r24, Y+1	; 0x01
     71a:	80 31       	cpi	r24, 0x10	; 16
     71c:	49 f4       	brne	.+18     	; 0x730 <__vector_5+0x52>
		{
			t_up = tempo_ms;				
     71e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     722:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__data_end+0x1>
     726:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <t_up.2013+0x1>
     72a:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <t_up.2013>
     72e:	08 c0       	rjmp	.+16     	; 0x740 <__vector_5+0x62>
		}	
		else
		{
			t_down = tempo_ms;
     730:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     734:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__data_end+0x1>
     738:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <t_down.2014+0x1>
     73c:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <t_down.2014>
		}
		if(t_up>t_down)
     740:	20 91 ab 01 	lds	r18, 0x01AB	; 0x8001ab <t_up.2013>
     744:	30 91 ac 01 	lds	r19, 0x01AC	; 0x8001ac <t_up.2013+0x1>
     748:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <t_down.2014>
     74c:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <t_down.2014+0x1>
     750:	82 17       	cp	r24, r18
     752:	93 07       	cpc	r25, r19
     754:	30 f5       	brcc	.+76     	; 0x7a2 <__vector_5+0xc4>
		{
			t_aux = 2*(t_up-t_down);
     756:	20 91 ab 01 	lds	r18, 0x01AB	; 0x8001ab <t_up.2013>
     75a:	30 91 ac 01 	lds	r19, 0x01AC	; 0x8001ac <t_up.2013+0x1>
     75e:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <t_down.2014>
     762:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <t_down.2014+0x1>
     766:	a9 01       	movw	r20, r18
     768:	48 1b       	sub	r20, r24
     76a:	59 0b       	sbc	r21, r25
     76c:	ca 01       	movw	r24, r20
     76e:	88 0f       	add	r24, r24
     770:	99 1f       	adc	r25, r25
     772:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <t_aux.2015+0x1>
     776:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <t_aux.2015>
			bpm = 60000/t_aux;			
     77a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <t_aux.2015>
     77e:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <t_aux.2015+0x1>
     782:	9c 01       	movw	r18, r24
     784:	40 e0       	ldi	r20, 0x00	; 0
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	80 e6       	ldi	r24, 0x60	; 96
     78a:	9a ee       	ldi	r25, 0xEA	; 234
     78c:	a0 e0       	ldi	r26, 0x00	; 0
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	bc 01       	movw	r22, r24
     792:	cd 01       	movw	r24, r26
     794:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divmodsi4>
     798:	da 01       	movw	r26, r20
     79a:	c9 01       	movw	r24, r18
     79c:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <bpm>
		else if(t_down>t_up)
		{
			t_aux = 2*(t_down-t_up);
			bpm = 60000/t_aux;
		}								
}
     7a0:	30 c0       	rjmp	.+96     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
		if(t_up>t_down)
		{
			t_aux = 2*(t_up-t_down);
			bpm = 60000/t_aux;			
		}
		else if(t_down>t_up)
     7a2:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <t_down.2014>
     7a6:	30 91 ae 01 	lds	r19, 0x01AE	; 0x8001ae <t_down.2014+0x1>
     7aa:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <t_up.2013>
     7ae:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <t_up.2013+0x1>
     7b2:	82 17       	cp	r24, r18
     7b4:	93 07       	cpc	r25, r19
     7b6:	28 f5       	brcc	.+74     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
		{
			t_aux = 2*(t_down-t_up);
     7b8:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <t_down.2014>
     7bc:	30 91 ae 01 	lds	r19, 0x01AE	; 0x8001ae <t_down.2014+0x1>
     7c0:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <t_up.2013>
     7c4:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <t_up.2013+0x1>
     7c8:	f9 01       	movw	r30, r18
     7ca:	e8 1b       	sub	r30, r24
     7cc:	f9 0b       	sbc	r31, r25
     7ce:	cf 01       	movw	r24, r30
     7d0:	88 0f       	add	r24, r24
     7d2:	99 1f       	adc	r25, r25
     7d4:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <t_aux.2015+0x1>
     7d8:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <t_aux.2015>
			bpm = 60000/t_aux;
     7dc:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <t_aux.2015>
     7e0:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <t_aux.2015+0x1>
     7e4:	9c 01       	movw	r18, r24
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	80 e6       	ldi	r24, 0x60	; 96
     7ec:	9a ee       	ldi	r25, 0xEA	; 234
     7ee:	a0 e0       	ldi	r26, 0x00	; 0
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	bc 01       	movw	r22, r24
     7f4:	cd 01       	movw	r24, r26
     7f6:	0e 94 9b 10 	call	0x2136	; 0x2136 <__divmodsi4>
     7fa:	da 01       	movw	r26, r20
     7fc:	c9 01       	movw	r24, r18
     7fe:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <bpm>
		}								
}
     802:	00 00       	nop
     804:	0f 90       	pop	r0
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	ff 91       	pop	r31
     80c:	ef 91       	pop	r30
     80e:	bf 91       	pop	r27
     810:	af 91       	pop	r26
     812:	9f 91       	pop	r25
     814:	8f 91       	pop	r24
     816:	7f 91       	pop	r23
     818:	6f 91       	pop	r22
     81a:	5f 91       	pop	r21
     81c:	4f 91       	pop	r20
     81e:	3f 91       	pop	r19
     820:	2f 91       	pop	r18
     822:	0f 90       	pop	r0
     824:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     828:	0f 90       	pop	r0
     82a:	1f 90       	pop	r1
     82c:	18 95       	reti

0000082e <__vector_3>:

ISR(PCINT0_vect)
{
     82e:	1f 92       	push	r1
     830:	0f 92       	push	r0
     832:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     836:	0f 92       	push	r0
     838:	11 24       	eor	r1, r1
     83a:	8f 93       	push	r24
     83c:	9f 93       	push	r25
     83e:	ef 93       	push	r30
     840:	ff 93       	push	r31
     842:	cf 93       	push	r28
     844:	df 93       	push	r29
     846:	00 d0       	rcall	.+0      	; 0x848 <__vector_3+0x1a>
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
	int B6 = PINB & 0b01000000;
     84c:	83 e2       	ldi	r24, 0x23	; 35
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	fc 01       	movw	r30, r24
     852:	80 81       	ld	r24, Z
     854:	88 2f       	mov	r24, r24
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	80 74       	andi	r24, 0x40	; 64
     85a:	99 27       	eor	r25, r25
     85c:	9a 83       	std	Y+2, r25	; 0x02
     85e:	89 83       	std	Y+1, r24	; 0x01
	if(B6 == 0)
     860:	89 81       	ldd	r24, Y+1	; 0x01
     862:	9a 81       	ldd	r25, Y+2	; 0x02
     864:	89 2b       	or	r24, r25
     866:	99 f4       	brne	.+38     	; 0x88e <__vector_3+0x60>
	{
		selecao++;
     868:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <selecao>
     86c:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <selecao+0x1>
     870:	01 96       	adiw	r24, 0x01	; 1
     872:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <selecao+0x1>
     876:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <selecao>
		if(selecao > 3)
     87a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <selecao>
     87e:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <selecao+0x1>
     882:	04 97       	sbiw	r24, 0x04	; 4
     884:	24 f0       	brlt	.+8      	; 0x88e <__vector_3+0x60>
			selecao = 0;
     886:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <selecao+0x1>
     88a:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <selecao>
	}
}
     88e:	00 00       	nop
     890:	0f 90       	pop	r0
     892:	0f 90       	pop	r0
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	ff 91       	pop	r31
     89a:	ef 91       	pop	r30
     89c:	9f 91       	pop	r25
     89e:	8f 91       	pop	r24
     8a0:	0f 90       	pop	r0
     8a2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     8a6:	0f 90       	pop	r0
     8a8:	1f 90       	pop	r1
     8aa:	18 95       	reti

000008ac <main>:

int main(void)
{
     8ac:	cf 93       	push	r28
     8ae:	df 93       	push	r29
     8b0:	cd b7       	in	r28, 0x3d	; 61
     8b2:	de b7       	in	r29, 0x3e	; 62
     8b4:	2d 97       	sbiw	r28, 0x0d	; 13
     8b6:	0f b6       	in	r0, 0x3f	; 63
     8b8:	f8 94       	cli
     8ba:	de bf       	out	0x3e, r29	; 62
     8bc:	0f be       	out	0x3f, r0	; 63
     8be:	cd bf       	out	0x3d, r28	; 61
    nokia_lcd_init();
     8c0:	0e 94 ab 0b 	call	0x1756	; 0x1756 <nokia_lcd_init>
    nokia_lcd_clear();
     8c4:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <nokia_lcd_clear>
	uint8_t  cont = 0; //FreqRespiracao deve ser entre 5~30	
     8c8:	1d 82       	std	Y+5, r1	; 0x05
	
	UBRR0H = (unsigned char)(myubrr>>8);	
     8ca:	85 ec       	ldi	r24, 0xC5	; 197
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	fc 01       	movw	r30, r24
     8d0:	10 82       	st	Z, r1
	UBRR0L = (unsigned char)myubrr;
     8d2:	84 ec       	ldi	r24, 0xC4	; 196
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	2f ef       	ldi	r18, 0xFF	; 255
     8d8:	fc 01       	movw	r30, r24
     8da:	20 83       	st	Z, r18
	UCSR0B = ((1<<RXEN0)|(1<<RXCIE0));
     8dc:	81 ec       	ldi	r24, 0xC1	; 193
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	20 e9       	ldi	r18, 0x90	; 144
     8e2:	fc 01       	movw	r30, r24
     8e4:	20 83       	st	Z, r18
	UCSR0C = (3<<UCSZ00);
     8e6:	82 ec       	ldi	r24, 0xC2	; 194
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	26 e0       	ldi	r18, 0x06	; 6
     8ec:	fc 01       	movw	r30, r24
     8ee:	20 83       	st	Z, r18
		
	DDRB = 0b10111111; // habilita os pinos B como saida
     8f0:	84 e2       	ldi	r24, 0x24	; 36
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	2f eb       	ldi	r18, 0xBF	; 191
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 83       	st	Z, r18
	PORTB = 0b01000000;
     8fa:	85 e2       	ldi	r24, 0x25	; 37
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	20 e4       	ldi	r18, 0x40	; 64
     900:	fc 01       	movw	r30, r24
     902:	20 83       	st	Z, r18
	DDRD = 0b10000000; //habilita os pinos D como entrada
     904:	8a e2       	ldi	r24, 0x2A	; 42
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	20 e8       	ldi	r18, 0x80	; 128
     90a:	fc 01       	movw	r30, r24
     90c:	20 83       	st	Z, r18
	PORTD = 0b00101100; 
     90e:	8b e2       	ldi	r24, 0x2B	; 43
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	2c e2       	ldi	r18, 0x2C	; 44
     914:	fc 01       	movw	r30, r24
     916:	20 83       	st	Z, r18
	
	ICR1 = 39999;
     918:	86 e8       	ldi	r24, 0x86	; 134
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	2f e3       	ldi	r18, 0x3F	; 63
     91e:	3c e9       	ldi	r19, 0x9C	; 156
     920:	fc 01       	movw	r30, r24
     922:	31 83       	std	Z+1, r19	; 0x01
     924:	20 83       	st	Z, r18
	TCCR1A = 0b10100010;
     926:	80 e8       	ldi	r24, 0x80	; 128
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	22 ea       	ldi	r18, 0xA2	; 162
     92c:	fc 01       	movw	r30, r24
     92e:	20 83       	st	Z, r18
	TCCR1B = 0b00011010;
     930:	81 e8       	ldi	r24, 0x81	; 129
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	2a e1       	ldi	r18, 0x1A	; 26
     936:	fc 01       	movw	r30, r24
     938:	20 83       	st	Z, r18
	
	OCR1A = 2000;//1ms - oxigenio 
     93a:	88 e8       	ldi	r24, 0x88	; 136
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	20 ed       	ldi	r18, 0xD0	; 208
     940:	37 e0       	ldi	r19, 0x07	; 7
     942:	fc 01       	movw	r30, r24
     944:	31 83       	std	Z+1, r19	; 0x01
     946:	20 83       	st	Z, r18
	OCR1B = 2000;//2ms - bomba
     948:	8a e8       	ldi	r24, 0x8A	; 138
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	20 ed       	ldi	r18, 0xD0	; 208
     94e:	37 e0       	ldi	r19, 0x07	; 7
     950:	fc 01       	movw	r30, r24
     952:	31 83       	std	Z+1, r19	; 0x01
     954:	20 83       	st	Z, r18
	
	TCCR0A = 0b00000010;
     956:	84 e4       	ldi	r24, 0x44	; 68
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	22 e0       	ldi	r18, 0x02	; 2
     95c:	fc 01       	movw	r30, r24
     95e:	20 83       	st	Z, r18
	TCCR0B = 0b00000011;
     960:	85 e4       	ldi	r24, 0x45	; 69
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	23 e0       	ldi	r18, 0x03	; 3
     966:	fc 01       	movw	r30, r24
     968:	20 83       	st	Z, r18
	OCR0A = 249;
     96a:	87 e4       	ldi	r24, 0x47	; 71
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	29 ef       	ldi	r18, 0xF9	; 249
     970:	fc 01       	movw	r30, r24
     972:	20 83       	st	Z, r18
	TIMSK0 = 0b00000010;
     974:	8e e6       	ldi	r24, 0x6E	; 110
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	22 e0       	ldi	r18, 0x02	; 2
     97a:	fc 01       	movw	r30, r24
     97c:	20 83       	st	Z, r18
	
	ADMUX = 0b01000000;
     97e:	8c e7       	ldi	r24, 0x7C	; 124
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	20 e4       	ldi	r18, 0x40	; 64
     984:	fc 01       	movw	r30, r24
     986:	20 83       	st	Z, r18
	ADCSRA = 0b11100111;
     988:	8a e7       	ldi	r24, 0x7A	; 122
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	27 ee       	ldi	r18, 0xE7	; 231
     98e:	fc 01       	movw	r30, r24
     990:	20 83       	st	Z, r18
	ADCSRB = 0x00;
     992:	8b e7       	ldi	r24, 0x7B	; 123
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	fc 01       	movw	r30, r24
     998:	10 82       	st	Z, r1
	DIDR0 = 0b00111100;
     99a:	8e e7       	ldi	r24, 0x7E	; 126
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	2c e3       	ldi	r18, 0x3C	; 60
     9a0:	fc 01       	movw	r30, r24
     9a2:	20 83       	st	Z, r18
	
	EICRA = 0b00001010;
     9a4:	89 e6       	ldi	r24, 0x69	; 105
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	2a e0       	ldi	r18, 0x0A	; 10
     9aa:	fc 01       	movw	r30, r24
     9ac:	20 83       	st	Z, r18
	EIMSK = 0b00000011;
     9ae:	8d e3       	ldi	r24, 0x3D	; 61
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	23 e0       	ldi	r18, 0x03	; 3
     9b4:	fc 01       	movw	r30, r24
     9b6:	20 83       	st	Z, r18
	PCICR = 0b00000101;
     9b8:	88 e6       	ldi	r24, 0x68	; 104
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	25 e0       	ldi	r18, 0x05	; 5
     9be:	fc 01       	movw	r30, r24
     9c0:	20 83       	st	Z, r18
	PCMSK2 |= (1<<PCINT20);
     9c2:	8d e6       	ldi	r24, 0x6D	; 109
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	2d e6       	ldi	r18, 0x6D	; 109
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	f9 01       	movw	r30, r18
     9cc:	20 81       	ld	r18, Z
     9ce:	20 61       	ori	r18, 0x10	; 16
     9d0:	fc 01       	movw	r30, r24
     9d2:	20 83       	st	Z, r18
	PCMSK0 |= (1<<PCINT6);
     9d4:	8b e6       	ldi	r24, 0x6B	; 107
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	2b e6       	ldi	r18, 0x6B	; 107
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	f9 01       	movw	r30, r18
     9de:	20 81       	ld	r18, Z
     9e0:	20 64       	ori	r18, 0x40	; 64
     9e2:	fc 01       	movw	r30, r24
     9e4:	20 83       	st	Z, r18
	sei();   
     9e6:	78 94       	sei
					
	while (1) {			
		PerOxigenio = (OCR1A-2000)/20;
     9e8:	88 e8       	ldi	r24, 0x88	; 136
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	fc 01       	movw	r30, r24
     9ee:	80 81       	ld	r24, Z
     9f0:	91 81       	ldd	r25, Z+1	; 0x01
     9f2:	80 5d       	subi	r24, 0xD0	; 208
     9f4:	97 40       	sbci	r25, 0x07	; 7
     9f6:	9c 01       	movw	r18, r24
     9f8:	ad ec       	ldi	r26, 0xCD	; 205
     9fa:	bc ec       	ldi	r27, 0xCC	; 204
     9fc:	0e 94 ba 10 	call	0x2174	; 0x2174 <__umulhisi3>
     a00:	92 95       	swap	r25
     a02:	82 95       	swap	r24
     a04:	8f 70       	andi	r24, 0x0F	; 15
     a06:	89 27       	eor	r24, r25
     a08:	9f 70       	andi	r25, 0x0F	; 15
     a0a:	89 27       	eor	r24, r25
     a0c:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <PerOxigenio>
		if(cont_int != 0)
     a10:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <cont_int>
     a14:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <cont_int+0x1>
     a18:	89 2b       	or	r24, r25
     a1a:	49 f0       	breq	.+18     	; 0xa2e <__stack+0x12f>
			cont_main++;
     a1c:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <cont_main>
     a20:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <cont_main+0x1>
     a24:	01 96       	adiw	r24, 0x01	; 1
     a26:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <cont_main+0x1>
     a2a:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <cont_main>
		if(cont_main > 9)
     a2e:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <cont_main>
     a32:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <cont_main+0x1>
     a36:	0a 97       	sbiw	r24, 0x0a	; 10
     a38:	4c f0       	brlt	.+18     	; 0xa4c <__stack+0x14d>
			cont_int++;
     a3a:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <cont_int>
     a3e:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <cont_int+0x1>
     a42:	01 96       	adiw	r24, 0x01	; 1
     a44:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <cont_int+0x1>
     a48:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <cont_int>
			if(cont_int > 9){
     a4c:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <cont_int>
     a50:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <cont_int+0x1>
     a54:	0a 97       	sbiw	r24, 0x0a	; 10
     a56:	74 f0       	brlt	.+28     	; 0xa74 <__stack+0x175>
				analisa_vetor();
     a58:	0e 94 12 09 	call	0x1224	; 0x1224 <analisa_vetor>
				cont_main = 0;
     a5c:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <cont_main+0x1>
     a60:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <cont_main>
				cont_int = 0;
     a64:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <cont_int+0x1>
     a68:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <cont_int>
				posicao = 0;
     a6c:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
     a70:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
			}
		DIDR0 = 0b00111111;
     a74:	8e e7       	ldi	r24, 0x7E	; 126
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	2f e3       	ldi	r18, 0x3F	; 63
     a7a:	fc 01       	movw	r30, r24
     a7c:	20 83       	st	Z, r18
		double temp=0,sat=0;	
     a7e:	1e 82       	std	Y+6, r1	; 0x06
     a80:	1f 82       	std	Y+7, r1	; 0x07
     a82:	18 86       	std	Y+8, r1	; 0x08
     a84:	19 86       	std	Y+9, r1	; 0x09
     a86:	1a 86       	std	Y+10, r1	; 0x0a
     a88:	1b 86       	std	Y+11, r1	; 0x0b
     a8a:	1c 86       	std	Y+12, r1	; 0x0c
     a8c:	1d 86       	std	Y+13, r1	; 0x0d
		if(tempo_ms%150 == 0)
     a8e:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <__data_end>
     a92:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <__data_end+0x1>
     a96:	ca 01       	movw	r24, r20
     a98:	96 95       	lsr	r25
     a9a:	87 95       	ror	r24
     a9c:	9c 01       	movw	r18, r24
     a9e:	a5 e7       	ldi	r26, 0x75	; 117
     aa0:	ba ed       	ldi	r27, 0xDA	; 218
     aa2:	0e 94 ba 10 	call	0x2174	; 0x2174 <__umulhisi3>
     aa6:	00 24       	eor	r0, r0
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	00 1c       	adc	r0, r0
     aae:	88 0f       	add	r24, r24
     ab0:	99 1f       	adc	r25, r25
     ab2:	00 1c       	adc	r0, r0
     ab4:	89 2f       	mov	r24, r25
     ab6:	90 2d       	mov	r25, r0
     ab8:	66 e9       	ldi	r22, 0x96	; 150
     aba:	68 9f       	mul	r22, r24
     abc:	90 01       	movw	r18, r0
     abe:	69 9f       	mul	r22, r25
     ac0:	30 0d       	add	r19, r0
     ac2:	11 24       	eor	r1, r1
     ac4:	ca 01       	movw	r24, r20
     ac6:	82 1b       	sub	r24, r18
     ac8:	93 0b       	sbc	r25, r19
     aca:	89 2b       	or	r24, r25
     acc:	09 f0       	breq	.+2      	; 0xad0 <__stack+0x1d1>
     ace:	a5 c0       	rjmp	.+330    	; 0xc1a <__stack+0x31b>
		{	
			if(leitura == 0)
     ad0:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <leitura>
     ad4:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <leitura+0x1>
     ad8:	89 2b       	or	r24, r25
     ada:	09 f0       	breq	.+2      	; 0xade <__stack+0x1df>
     adc:	46 c0       	rjmp	.+140    	; 0xb6a <__stack+0x26b>
			{
				DIDR0 = 0b01111101;
     ade:	8e e7       	ldi	r24, 0x7E	; 126
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	2d e7       	ldi	r18, 0x7D	; 125
     ae4:	fc 01       	movw	r30, r24
     ae6:	20 83       	st	Z, r18
				ADMUX = 0b01000000;
     ae8:	8c e7       	ldi	r24, 0x7C	; 124
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	20 e4       	ldi	r18, 0x40	; 64
     aee:	fc 01       	movw	r30, r24
     af0:	20 83       	st	Z, r18
				temp = 0.04886*ADC+10.0163;
     af2:	88 e7       	ldi	r24, 0x78	; 120
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	fc 01       	movw	r30, r24
     af8:	80 81       	ld	r24, Z
     afa:	91 81       	ldd	r25, Z+1	; 0x01
     afc:	cc 01       	movw	r24, r24
     afe:	a0 e0       	ldi	r26, 0x00	; 0
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	bc 01       	movw	r22, r24
     b04:	cd 01       	movw	r24, r26
     b06:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__floatunsisf>
     b0a:	dc 01       	movw	r26, r24
     b0c:	cb 01       	movw	r24, r22
     b0e:	2c e6       	ldi	r18, 0x6C	; 108
     b10:	31 e2       	ldi	r19, 0x21	; 33
     b12:	48 e4       	ldi	r20, 0x48	; 72
     b14:	5d e3       	ldi	r21, 0x3D	; 61
     b16:	bc 01       	movw	r22, r24
     b18:	cd 01       	movw	r24, r26
     b1a:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
     b1e:	dc 01       	movw	r26, r24
     b20:	cb 01       	movw	r24, r22
     b22:	24 ec       	ldi	r18, 0xC4	; 196
     b24:	32 e4       	ldi	r19, 0x42	; 66
     b26:	40 e2       	ldi	r20, 0x20	; 32
     b28:	51 e4       	ldi	r21, 0x41	; 65
     b2a:	bc 01       	movw	r22, r24
     b2c:	cd 01       	movw	r24, r26
     b2e:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__addsf3>
     b32:	dc 01       	movw	r26, r24
     b34:	cb 01       	movw	r24, r22
     b36:	8e 83       	std	Y+6, r24	; 0x06
     b38:	9f 83       	std	Y+7, r25	; 0x07
     b3a:	a8 87       	std	Y+8, r26	; 0x08
     b3c:	b9 87       	std	Y+9, r27	; 0x09
				temperatura = (uint8_t)temp;
     b3e:	6e 81       	ldd	r22, Y+6	; 0x06
     b40:	7f 81       	ldd	r23, Y+7	; 0x07
     b42:	88 85       	ldd	r24, Y+8	; 0x08
     b44:	99 85       	ldd	r25, Y+9	; 0x09
     b46:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
     b4a:	dc 01       	movw	r26, r24
     b4c:	cb 01       	movw	r24, r22
     b4e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			    DIDR0 = 0b01111111;
     b52:	8e e7       	ldi	r24, 0x7E	; 126
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	2f e7       	ldi	r18, 0x7F	; 127
     b58:	fc 01       	movw	r30, r24
     b5a:	20 83       	st	Z, r18
				leitura = 1;
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <leitura+0x1>
     b64:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <leitura>
     b68:	39 c0       	rjmp	.+114    	; 0xbdc <__stack+0x2dd>
			} 
			else
			{
				DIDR0 = 0b01111110;
     b6a:	8e e7       	ldi	r24, 0x7E	; 126
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	2e e7       	ldi	r18, 0x7E	; 126
     b70:	fc 01       	movw	r30, r24
     b72:	20 83       	st	Z, r18
				ADMUX = 0b01000001;
     b74:	8c e7       	ldi	r24, 0x7C	; 124
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	21 e4       	ldi	r18, 0x41	; 65
     b7a:	fc 01       	movw	r30, r24
     b7c:	20 83       	st	Z, r18
				sat = 0.1223*ADC;
     b7e:	88 e7       	ldi	r24, 0x78	; 120
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	fc 01       	movw	r30, r24
     b84:	80 81       	ld	r24, Z
     b86:	91 81       	ldd	r25, Z+1	; 0x01
     b88:	cc 01       	movw	r24, r24
     b8a:	a0 e0       	ldi	r26, 0x00	; 0
     b8c:	b0 e0       	ldi	r27, 0x00	; 0
     b8e:	bc 01       	movw	r22, r24
     b90:	cd 01       	movw	r24, r26
     b92:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__floatunsisf>
     b96:	dc 01       	movw	r26, r24
     b98:	cb 01       	movw	r24, r22
     b9a:	2c e6       	ldi	r18, 0x6C	; 108
     b9c:	38 e7       	ldi	r19, 0x78	; 120
     b9e:	4a ef       	ldi	r20, 0xFA	; 250
     ba0:	5d e3       	ldi	r21, 0x3D	; 61
     ba2:	bc 01       	movw	r22, r24
     ba4:	cd 01       	movw	r24, r26
     ba6:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	8a 87       	std	Y+10, r24	; 0x0a
     bb0:	9b 87       	std	Y+11, r25	; 0x0b
     bb2:	ac 87       	std	Y+12, r26	; 0x0c
     bb4:	bd 87       	std	Y+13, r27	; 0x0d
				saturacao = (uint8_t)sat;
     bb6:	6a 85       	ldd	r22, Y+10	; 0x0a
     bb8:	7b 85       	ldd	r23, Y+11	; 0x0b
     bba:	8c 85       	ldd	r24, Y+12	; 0x0c
     bbc:	9d 85       	ldd	r25, Y+13	; 0x0d
     bbe:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
     bc2:	dc 01       	movw	r26, r24
     bc4:	cb 01       	movw	r24, r22
     bc6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <saturacao>
				DIDR0 = 0b01111111;
     bca:	8e e7       	ldi	r24, 0x7E	; 126
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	2f e7       	ldi	r18, 0x7F	; 127
     bd0:	fc 01       	movw	r30, r24
     bd2:	20 83       	st	Z, r18
				leitura = 0;
     bd4:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <leitura+0x1>
     bd8:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <leitura>
			}
			if(temperatura < 35 || temperatura > 41 || saturacao < 60)
     bdc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     be0:	83 32       	cpi	r24, 0x23	; 35
     be2:	40 f0       	brcs	.+16     	; 0xbf4 <__stack+0x2f5>
     be4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     be8:	8a 32       	cpi	r24, 0x2A	; 42
     bea:	20 f4       	brcc	.+8      	; 0xbf4 <__stack+0x2f5>
     bec:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <saturacao>
     bf0:	8c 33       	cpi	r24, 0x3C	; 60
     bf2:	50 f4       	brcc	.+20     	; 0xc08 <__stack+0x309>
				PORTD |= 0b10000000;
     bf4:	8b e2       	ldi	r24, 0x2B	; 43
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	2b e2       	ldi	r18, 0x2B	; 43
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	f9 01       	movw	r30, r18
     bfe:	20 81       	ld	r18, Z
     c00:	20 68       	ori	r18, 0x80	; 128
     c02:	fc 01       	movw	r30, r24
     c04:	20 83       	st	Z, r18
     c06:	09 c0       	rjmp	.+18     	; 0xc1a <__stack+0x31b>
			else
				PORTD &= 0b01111111;		
     c08:	8b e2       	ldi	r24, 0x2B	; 43
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	2b e2       	ldi	r18, 0x2B	; 43
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	f9 01       	movw	r30, r18
     c12:	20 81       	ld	r18, Z
     c14:	2f 77       	andi	r18, 0x7F	; 127
     c16:	fc 01       	movw	r30, r24
     c18:	20 83       	st	Z, r18
		}
				
		nokia_lcd_clear();		
     c1a:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <nokia_lcd_clear>
		switch(selecao){
     c1e:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <selecao>
     c22:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <selecao+0x1>
     c26:	81 30       	cpi	r24, 0x01	; 1
     c28:	91 05       	cpc	r25, r1
     c2a:	09 f4       	brne	.+2      	; 0xc2e <__stack+0x32f>
     c2c:	0e c1       	rjmp	.+540    	; 0xe4a <__stack+0x54b>
     c2e:	82 30       	cpi	r24, 0x02	; 2
     c30:	91 05       	cpc	r25, r1
     c32:	1c f4       	brge	.+6      	; 0xc3a <__stack+0x33b>
     c34:	89 2b       	or	r24, r25
     c36:	49 f0       	breq	.+18     	; 0xc4a <__stack+0x34b>
     c38:	43 c2       	rjmp	.+1158   	; 0x10c0 <__stack+0x7c1>
     c3a:	82 30       	cpi	r24, 0x02	; 2
     c3c:	91 05       	cpc	r25, r1
     c3e:	09 f4       	brne	.+2      	; 0xc42 <__stack+0x343>
     c40:	49 c1       	rjmp	.+658    	; 0xed4 <__stack+0x5d5>
     c42:	03 97       	sbiw	r24, 0x03	; 3
     c44:	09 f4       	brne	.+2      	; 0xc48 <__stack+0x349>
     c46:	8b c1       	rjmp	.+790    	; 0xf5e <__stack+0x65f>
     c48:	3b c2       	rjmp	.+1142   	; 0x10c0 <__stack+0x7c1>
			case 0:
			nokia_lcd_write_string("Sinais Vitais:", 1);
     c4a:	61 e0       	ldi	r22, 0x01	; 1
     c4c:	86 e1       	ldi	r24, 0x16	; 22
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
			int2string(bpm, var);					
     c54:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <bpm>
     c58:	88 2f       	mov	r24, r24
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	6b ea       	ldi	r22, 0xAB	; 171
     c5e:	73 e0       	ldi	r23, 0x03	; 3
     c60:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
			nokia_lcd_set_cursor(0, 10);
     c64:	6a e0       	ldi	r22, 0x0A	; 10
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(var,1);
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	8b ea       	ldi	r24, 0xAB	; 171
     c70:	93 e0       	ldi	r25, 0x03	; 3
     c72:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
			nokia_lcd_set_cursor(35, 10);
     c76:	6a e0       	ldi	r22, 0x0A	; 10
     c78:	83 e2       	ldi	r24, 0x23	; 35
     c7a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("BPM", 1);		
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	85 e2       	ldi	r24, 0x25	; 37
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
			nokia_lcd_set_cursor(45, 40);
     c88:	68 e2       	ldi	r22, 0x28	; 40
     c8a:	8d e2       	ldi	r24, 0x2D	; 45
     c8c:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("mmHg",1);
     c90:	61 e0       	ldi	r22, 0x01	; 1
     c92:	89 e2       	ldi	r24, 0x29	; 41
     c94:	91 e0       	ldi	r25, 0x01	; 1
     c96:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
			if(padrao != 0 && posicao == 0)
     c9a:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <padrao>
     c9e:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <padrao+0x1>
     ca2:	89 2b       	or	r24, r25
     ca4:	31 f1       	breq	.+76     	; 0xcf2 <__stack+0x3f3>
     ca6:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <posicao>
     caa:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <posicao+0x1>
     cae:	89 2b       	or	r24, r25
     cb0:	01 f5       	brne	.+64     	; 0xcf2 <__stack+0x3f3>
			{
				nokia_lcd_set_cursor(0, 40);	
     cb2:	68 e2       	ldi	r22, 0x28	; 40
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				for(int i=1;dados[i] != ':';i++)	
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	9a 83       	std	Y+2, r25	; 0x02
     cc0:	89 83       	std	Y+1, r24	; 0x01
     cc2:	0e c0       	rjmp	.+28     	; 0xce0 <__stack+0x3e1>
				nokia_lcd_write_char(dados[i],1);
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
     cc6:	9a 81       	ldd	r25, Y+2	; 0x02
     cc8:	83 5f       	subi	r24, 0xF3	; 243
     cca:	9e 4f       	sbci	r25, 0xFE	; 254
     ccc:	fc 01       	movw	r30, r24
     cce:	80 81       	ld	r24, Z
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
			nokia_lcd_set_cursor(45, 40);
			nokia_lcd_write_string("mmHg",1);
			if(padrao != 0 && posicao == 0)
			{
				nokia_lcd_set_cursor(0, 40);	
				for(int i=1;dados[i] != ':';i++)	
     cd6:	89 81       	ldd	r24, Y+1	; 0x01
     cd8:	9a 81       	ldd	r25, Y+2	; 0x02
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	9a 83       	std	Y+2, r25	; 0x02
     cde:	89 83       	std	Y+1, r24	; 0x01
     ce0:	89 81       	ldd	r24, Y+1	; 0x01
     ce2:	9a 81       	ldd	r25, Y+2	; 0x02
     ce4:	83 5f       	subi	r24, 0xF3	; 243
     ce6:	9e 4f       	sbci	r25, 0xFE	; 254
     ce8:	fc 01       	movw	r30, r24
     cea:	80 81       	ld	r24, Z
     cec:	8a 33       	cpi	r24, 0x3A	; 58
     cee:	51 f7       	brne	.-44     	; 0xcc4 <__stack+0x3c5>
     cf0:	2a c0       	rjmp	.+84     	; 0xd46 <__stack+0x447>
				nokia_lcd_write_char(dados[i],1);
				
			}
			else
			{
				nokia_lcd_set_cursor(0, 40);
     cf2:	68 e2       	ldi	r22, 0x28	; 40
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("error",1);
     cfa:	61 e0       	ldi	r22, 0x01	; 1
     cfc:	8e e2       	ldi	r24, 0x2E	; 46
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				if(count>8)
     d04:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <count>
     d08:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <count+0x1>
     d0c:	09 97       	sbiw	r24, 0x09	; 9
     d0e:	dc f0       	brlt	.+54     	; 0xd46 <__stack+0x447>
				{
					posicao = 0;
     d10:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
     d14:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
					for(int i=0;i<9;i++)
     d18:	1c 82       	std	Y+4, r1	; 0x04
     d1a:	1b 82       	std	Y+3, r1	; 0x03
     d1c:	0c c0       	rjmp	.+24     	; 0xd36 <__stack+0x437>
					recebido[i] = 198;
     d1e:	8b 81       	ldd	r24, Y+3	; 0x03
     d20:	9c 81       	ldd	r25, Y+4	; 0x04
     d22:	8c 5f       	subi	r24, 0xFC	; 252
     d24:	9e 4f       	sbci	r25, 0xFE	; 254
     d26:	26 ec       	ldi	r18, 0xC6	; 198
     d28:	fc 01       	movw	r30, r24
     d2a:	20 83       	st	Z, r18
				nokia_lcd_set_cursor(0, 40);
				nokia_lcd_write_string("error",1);
				if(count>8)
				{
					posicao = 0;
					for(int i=0;i<9;i++)
     d2c:	8b 81       	ldd	r24, Y+3	; 0x03
     d2e:	9c 81       	ldd	r25, Y+4	; 0x04
     d30:	01 96       	adiw	r24, 0x01	; 1
     d32:	9c 83       	std	Y+4, r25	; 0x04
     d34:	8b 83       	std	Y+3, r24	; 0x03
     d36:	8b 81       	ldd	r24, Y+3	; 0x03
     d38:	9c 81       	ldd	r25, Y+4	; 0x04
     d3a:	09 97       	sbiw	r24, 0x09	; 9
     d3c:	84 f3       	brlt	.-32     	; 0xd1e <__stack+0x41f>
					recebido[i] = 198;
					count = 0;
     d3e:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <count+0x1>
     d42:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <count>
				}			
			}
			nokia_lcd_set_cursor(0, 20);				
     d46:	64 e1       	ldi	r22, 0x14	; 20
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
			if(tempo_ms <= 200){
     d4e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     d52:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__data_end+0x1>
     d56:	89 3c       	cpi	r24, 0xC9	; 201
     d58:	91 05       	cpc	r25, r1
     d5a:	10 f5       	brcc	.+68     	; 0xda0 <__stack+0x4a1>
				nokia_lcd_write_string("---", 1);		
     d5c:	61 e0       	ldi	r22, 0x01	; 1
     d5e:	84 e3       	ldi	r24, 0x34	; 52
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 20);
     d66:	64 e1       	ldi	r22, 0x14	; 20
     d68:	83 e2       	ldi	r24, 0x23	; 35
     d6a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Celsius", 1);
     d6e:	61 e0       	ldi	r22, 0x01	; 1
     d70:	88 e3       	ldi	r24, 0x38	; 56
     d72:	91 e0       	ldi	r25, 0x01	; 1
     d74:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0, 30);
     d78:	6e e1       	ldi	r22, 0x1E	; 30
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("---", 1);
     d80:	61 e0       	ldi	r22, 0x01	; 1
     d82:	84 e3       	ldi	r24, 0x34	; 52
     d84:	91 e0       	ldi	r25, 0x01	; 1
     d86:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 30);
     d8a:	6e e1       	ldi	r22, 0x1E	; 30
     d8c:	83 e2       	ldi	r24, 0x23	; 35
     d8e:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("%SpO2", 1);
     d92:	61 e0       	ldi	r22, 0x01	; 1
     d94:	80 e4       	ldi	r24, 0x40	; 64
     d96:	91 e0       	ldi	r25, 0x01	; 1
     d98:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_render();
     d9c:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <nokia_lcd_render>
			}		
		
			if(tempo_ms%200 == 0){
     da0:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <__data_end>
     da4:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <__data_end+0x1>
     da8:	ca 01       	movw	r24, r20
     daa:	96 95       	lsr	r25
     dac:	87 95       	ror	r24
     dae:	96 95       	lsr	r25
     db0:	87 95       	ror	r24
     db2:	96 95       	lsr	r25
     db4:	87 95       	ror	r24
     db6:	9c 01       	movw	r18, r24
     db8:	ab e7       	ldi	r26, 0x7B	; 123
     dba:	b4 e1       	ldi	r27, 0x14	; 20
     dbc:	0e 94 ba 10 	call	0x2174	; 0x2174 <__umulhisi3>
     dc0:	96 95       	lsr	r25
     dc2:	87 95       	ror	r24
     dc4:	68 ec       	ldi	r22, 0xC8	; 200
     dc6:	68 9f       	mul	r22, r24
     dc8:	90 01       	movw	r18, r0
     dca:	69 9f       	mul	r22, r25
     dcc:	30 0d       	add	r19, r0
     dce:	11 24       	eor	r1, r1
     dd0:	ca 01       	movw	r24, r20
     dd2:	82 1b       	sub	r24, r18
     dd4:	93 0b       	sbc	r25, r19
     dd6:	89 2b       	or	r24, r25
     dd8:	09 f0       	breq	.+2      	; 0xddc <__stack+0x4dd>
     dda:	71 c1       	rjmp	.+738    	; 0x10be <__stack+0x7bf>
				int2string(temperatura, var);
     ddc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     de0:	88 2f       	mov	r24, r24
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	6b ea       	ldi	r22, 0xAB	; 171
     de6:	73 e0       	ldi	r23, 0x03	; 3
     de8:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0, 20);
     dec:	64 e1       	ldi	r22, 0x14	; 20
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);
     df4:	61 e0       	ldi	r22, 0x01	; 1
     df6:	8b ea       	ldi	r24, 0xAB	; 171
     df8:	93 e0       	ldi	r25, 0x03	; 3
     dfa:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 20);
     dfe:	64 e1       	ldi	r22, 0x14	; 20
     e00:	83 e2       	ldi	r24, 0x23	; 35
     e02:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Celsius", 1);
     e06:	61 e0       	ldi	r22, 0x01	; 1
     e08:	88 e3       	ldi	r24, 0x38	; 56
     e0a:	91 e0       	ldi	r25, 0x01	; 1
     e0c:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				int2string(saturacao, var);
     e10:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <saturacao>
     e14:	88 2f       	mov	r24, r24
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	6b ea       	ldi	r22, 0xAB	; 171
     e1a:	73 e0       	ldi	r23, 0x03	; 3
     e1c:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0, 30);
     e20:	6e e1       	ldi	r22, 0x1E	; 30
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);
     e28:	61 e0       	ldi	r22, 0x01	; 1
     e2a:	8b ea       	ldi	r24, 0xAB	; 171
     e2c:	93 e0       	ldi	r25, 0x03	; 3
     e2e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 30);
     e32:	6e e1       	ldi	r22, 0x1E	; 30
     e34:	83 e2       	ldi	r24, 0x23	; 35
     e36:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("%SpO2", 1);
     e3a:	61 e0       	ldi	r22, 0x01	; 1
     e3c:	80 e4       	ldi	r24, 0x40	; 64
     e3e:	91 e0       	ldi	r25, 0x01	; 1
     e40:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_render();	
     e44:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <nokia_lcd_render>
			}
			break;
     e48:	3a c1       	rjmp	.+628    	; 0x10be <__stack+0x7bf>
			case 1:
				nokia_lcd_write_string("Parametros:", 1);	
     e4a:	61 e0       	ldi	r22, 0x01	; 1
     e4c:	86 e4       	ldi	r24, 0x46	; 70
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				int2string(FreqRespiracao, var);
     e54:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     e58:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     e5c:	6b ea       	ldi	r22, 0xAB	; 171
     e5e:	73 e0       	ldi	r23, 0x03	; 3
     e60:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0,10);
     e64:	6a e0       	ldi	r22, 0x0A	; 10
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);
     e6c:	61 e0       	ldi	r22, 0x01	; 1
     e6e:	8b ea       	ldi	r24, 0xAB	; 171
     e70:	93 e0       	ldi	r25, 0x03	; 3
     e72:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(20,10);
     e76:	6a e0       	ldi	r22, 0x0A	; 10
     e78:	84 e1       	ldi	r24, 0x14	; 20
     e7a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("->", 1);
     e7e:	61 e0       	ldi	r22, 0x01	; 1
     e80:	82 e5       	ldi	r24, 0x52	; 82
     e82:	91 e0       	ldi	r25, 0x01	; 1
     e84:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 10);
     e88:	6a e0       	ldi	r22, 0x0A	; 10
     e8a:	83 e2       	ldi	r24, 0x23	; 35
     e8c:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Resp/Min", 1);
     e90:	61 e0       	ldi	r22, 0x01	; 1
     e92:	85 e5       	ldi	r24, 0x55	; 85
     e94:	91 e0       	ldi	r25, 0x01	; 1
     e96:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				int2string(PerOxigenio, var);
     e9a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <PerOxigenio>
     e9e:	88 2f       	mov	r24, r24
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	6b ea       	ldi	r22, 0xAB	; 171
     ea4:	73 e0       	ldi	r23, 0x03	; 3
     ea6:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0,20);
     eaa:	64 e1       	ldi	r22, 0x14	; 20
     eac:	80 e0       	ldi	r24, 0x00	; 0
     eae:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);				
     eb2:	61 e0       	ldi	r22, 0x01	; 1
     eb4:	8b ea       	ldi	r24, 0xAB	; 171
     eb6:	93 e0       	ldi	r25, 0x03	; 3
     eb8:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 20);
     ebc:	64 e1       	ldi	r22, 0x14	; 20
     ebe:	83 e2       	ldi	r24, 0x23	; 35
     ec0:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("%O2", 1);
     ec4:	61 e0       	ldi	r22, 0x01	; 1
     ec6:	8e e5       	ldi	r24, 0x5E	; 94
     ec8:	91 e0       	ldi	r25, 0x01	; 1
     eca:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_render();
     ece:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <nokia_lcd_render>
			break;
     ed2:	f6 c0       	rjmp	.+492    	; 0x10c0 <__stack+0x7c1>
			case 2:
				nokia_lcd_write_string("Parametros:", 1);
     ed4:	61 e0       	ldi	r22, 0x01	; 1
     ed6:	86 e4       	ldi	r24, 0x46	; 70
     ed8:	91 e0       	ldi	r25, 0x01	; 1
     eda:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				int2string(FreqRespiracao, var);
     ede:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqRespiracao>
     ee2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqRespiracao+0x1>
     ee6:	6b ea       	ldi	r22, 0xAB	; 171
     ee8:	73 e0       	ldi	r23, 0x03	; 3
     eea:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0,10);
     eee:	6a e0       	ldi	r22, 0x0A	; 10
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);				
     ef6:	61 e0       	ldi	r22, 0x01	; 1
     ef8:	8b ea       	ldi	r24, 0xAB	; 171
     efa:	93 e0       	ldi	r25, 0x03	; 3
     efc:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 10);
     f00:	6a e0       	ldi	r22, 0x0A	; 10
     f02:	83 e2       	ldi	r24, 0x23	; 35
     f04:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Resp/Min", 1);
     f08:	61 e0       	ldi	r22, 0x01	; 1
     f0a:	85 e5       	ldi	r24, 0x55	; 85
     f0c:	91 e0       	ldi	r25, 0x01	; 1
     f0e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				int2string(PerOxigenio, var);
     f12:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <PerOxigenio>
     f16:	88 2f       	mov	r24, r24
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	6b ea       	ldi	r22, 0xAB	; 171
     f1c:	73 e0       	ldi	r23, 0x03	; 3
     f1e:	0e 94 af 08 	call	0x115e	; 0x115e <int2string>
				nokia_lcd_set_cursor(0,20);
     f22:	64 e1       	ldi	r22, 0x14	; 20
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string(var,1);
     f2a:	61 e0       	ldi	r22, 0x01	; 1
     f2c:	8b ea       	ldi	r24, 0xAB	; 171
     f2e:	93 e0       	ldi	r25, 0x03	; 3
     f30:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(20,20);
     f34:	64 e1       	ldi	r22, 0x14	; 20
     f36:	84 e1       	ldi	r24, 0x14	; 20
     f38:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("->", 1);
     f3c:	61 e0       	ldi	r22, 0x01	; 1
     f3e:	82 e5       	ldi	r24, 0x52	; 82
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(35, 20);
     f46:	64 e1       	ldi	r22, 0x14	; 20
     f48:	83 e2       	ldi	r24, 0x23	; 35
     f4a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("%O2", 1);
     f4e:	61 e0       	ldi	r22, 0x01	; 1
     f50:	8e e5       	ldi	r24, 0x5E	; 94
     f52:	91 e0       	ldi	r25, 0x01	; 1
     f54:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_render();	
     f58:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <nokia_lcd_render>
			break;
     f5c:	b1 c0       	rjmp	.+354    	; 0x10c0 <__stack+0x7c1>
			case 3:
				nokia_lcd_write_string("Dados Salvos:", 1);
     f5e:	61 e0       	ldi	r22, 0x01	; 1
     f60:	82 e6       	ldi	r24, 0x62	; 98
     f62:	91 e0       	ldi	r25, 0x01	; 1
     f64:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(45, 10);
     f68:	6a e0       	ldi	r22, 0x0A	; 10
     f6a:	8d e2       	ldi	r24, 0x2D	; 45
     f6c:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("mmHg",1);
     f70:	61 e0       	ldi	r22, 0x01	; 1
     f72:	89 e2       	ldi	r24, 0x29	; 41
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,10);
     f7a:	6a e0       	ldi	r22, 0x0A	; 10
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				for(h=1 && z==1;h<=6;h++){
     f82:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <z>
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	91 30       	cpi	r25, 0x01	; 1
     f8a:	09 f0       	breq	.+2      	; 0xf8e <__stack+0x68f>
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
     f92:	10 c0       	rjmp	.+32     	; 0xfb4 <__stack+0x6b5>
				nokia_lcd_write_char(EP[h],1);
     f94:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
     f98:	88 2f       	mov	r24, r24
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	89 57       	subi	r24, 0x79	; 121
     f9e:	9e 4f       	sbci	r25, 0xFE	; 254
     fa0:	fc 01       	movw	r30, r24
     fa2:	80 81       	ld	r24, Z
     fa4:	61 e0       	ldi	r22, 0x01	; 1
     fa6:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
			case 3:
				nokia_lcd_write_string("Dados Salvos:", 1);
				nokia_lcd_set_cursor(45, 10);
				nokia_lcd_write_string("mmHg",1);
				nokia_lcd_set_cursor(0,10);
				for(h=1 && z==1;h<=6;h++){
     faa:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
     fae:	8f 5f       	subi	r24, 0xFF	; 255
     fb0:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
     fb4:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
     fb8:	87 30       	cpi	r24, 0x07	; 7
     fba:	60 f3       	brcs	.-40     	; 0xf94 <__stack+0x695>
				nokia_lcd_write_char(EP[h],1);
				}
				nokia_lcd_set_cursor(45, 20);
     fbc:	64 e1       	ldi	r22, 0x14	; 20
     fbe:	8d e2       	ldi	r24, 0x2D	; 45
     fc0:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("mmHg",1);
     fc4:	61 e0       	ldi	r22, 0x01	; 1
     fc6:	89 e2       	ldi	r24, 0x29	; 41
     fc8:	91 e0       	ldi	r25, 0x01	; 1
     fca:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,20);
     fce:	64 e1       	ldi	r22, 0x14	; 20
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				for(h=1 && z==2;h<=6;h++){
     fd6:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <z>
     fda:	81 e0       	ldi	r24, 0x01	; 1
     fdc:	92 30       	cpi	r25, 0x02	; 2
     fde:	09 f0       	breq	.+2      	; 0xfe2 <__stack+0x6e3>
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
     fe6:	10 c0       	rjmp	.+32     	; 0x1008 <__stack+0x709>
				nokia_lcd_write_char(EZ[h],1);
     fe8:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
     fec:	88 2f       	mov	r24, r24
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	80 57       	subi	r24, 0x70	; 112
     ff2:	9e 4f       	sbci	r25, 0xFE	; 254
     ff4:	fc 01       	movw	r30, r24
     ff6:	80 81       	ld	r24, Z
     ff8:	61 e0       	ldi	r22, 0x01	; 1
     ffa:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
				nokia_lcd_write_char(EP[h],1);
				}
				nokia_lcd_set_cursor(45, 20);
				nokia_lcd_write_string("mmHg",1);
				nokia_lcd_set_cursor(0,20);
				for(h=1 && z==2;h<=6;h++){
     ffe:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    1002:	8f 5f       	subi	r24, 0xFF	; 255
    1004:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
    1008:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    100c:	87 30       	cpi	r24, 0x07	; 7
    100e:	60 f3       	brcs	.-40     	; 0xfe8 <__stack+0x6e9>
				nokia_lcd_write_char(EZ[h],1);
				}
				nokia_lcd_set_cursor(45, 30);
    1010:	6e e1       	ldi	r22, 0x1E	; 30
    1012:	8d e2       	ldi	r24, 0x2D	; 45
    1014:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("mmHg",1);
    1018:	61 e0       	ldi	r22, 0x01	; 1
    101a:	89 e2       	ldi	r24, 0x29	; 41
    101c:	91 e0       	ldi	r25, 0x01	; 1
    101e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,30);
    1022:	6e e1       	ldi	r22, 0x1E	; 30
    1024:	80 e0       	ldi	r24, 0x00	; 0
    1026:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				for(h=1 && z==3;h<=6;h++){
    102a:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <z>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	93 30       	cpi	r25, 0x03	; 3
    1032:	09 f0       	breq	.+2      	; 0x1036 <__stack+0x737>
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
    103a:	10 c0       	rjmp	.+32     	; 0x105c <__stack+0x75d>
				nokia_lcd_write_char(EQ[h],1);
    103c:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    1040:	88 2f       	mov	r24, r24
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	87 56       	subi	r24, 0x67	; 103
    1046:	9e 4f       	sbci	r25, 0xFE	; 254
    1048:	fc 01       	movw	r30, r24
    104a:	80 81       	ld	r24, Z
    104c:	61 e0       	ldi	r22, 0x01	; 1
    104e:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
				nokia_lcd_write_char(EZ[h],1);
				}
				nokia_lcd_set_cursor(45, 30);
				nokia_lcd_write_string("mmHg",1);
				nokia_lcd_set_cursor(0,30);
				for(h=1 && z==3;h<=6;h++){
    1052:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    1056:	8f 5f       	subi	r24, 0xFF	; 255
    1058:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
    105c:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    1060:	87 30       	cpi	r24, 0x07	; 7
    1062:	60 f3       	brcs	.-40     	; 0x103c <__stack+0x73d>
				nokia_lcd_write_char(EQ[h],1);
				}
				nokia_lcd_set_cursor(45, 40);
    1064:	68 e2       	ldi	r22, 0x28	; 40
    1066:	8d e2       	ldi	r24, 0x2D	; 45
    1068:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("mmHg",1);
    106c:	61 e0       	ldi	r22, 0x01	; 1
    106e:	89 e2       	ldi	r24, 0x29	; 41
    1070:	91 e0       	ldi	r25, 0x01	; 1
    1072:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,40);
    1076:	68 e2       	ldi	r22, 0x28	; 40
    1078:	80 e0       	ldi	r24, 0x00	; 0
    107a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <nokia_lcd_set_cursor>
				for(h=1 && z==4;h<=6;h++){
    107e:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <z>
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	94 30       	cpi	r25, 0x04	; 4
    1086:	09 f0       	breq	.+2      	; 0x108a <__stack+0x78b>
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
    108e:	10 c0       	rjmp	.+32     	; 0x10b0 <__stack+0x7b1>
				nokia_lcd_write_char(EL[h],1);
    1090:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	8e 55       	subi	r24, 0x5E	; 94
    109a:	9e 4f       	sbci	r25, 0xFE	; 254
    109c:	fc 01       	movw	r30, r24
    109e:	80 81       	ld	r24, Z
    10a0:	61 e0       	ldi	r22, 0x01	; 1
    10a2:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
				nokia_lcd_write_char(EQ[h],1);
				}
				nokia_lcd_set_cursor(45, 40);
				nokia_lcd_write_string("mmHg",1);
				nokia_lcd_set_cursor(0,40);
				for(h=1 && z==4;h<=6;h++){
    10a6:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    10aa:	8f 5f       	subi	r24, 0xFF	; 255
    10ac:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <h>
    10b0:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <h>
    10b4:	87 30       	cpi	r24, 0x07	; 7
    10b6:	60 f3       	brcs	.-40     	; 0x1090 <__stack+0x791>
				nokia_lcd_write_char(EL[h],1);
				}
				nokia_lcd_render();
    10b8:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <nokia_lcd_render>
				
			
			break;
    10bc:	01 c0       	rjmp	.+2      	; 0x10c0 <__stack+0x7c1>
				nokia_lcd_write_string(var,1);
				nokia_lcd_set_cursor(35, 30);
				nokia_lcd_write_string("%SpO2", 1);
				nokia_lcd_render();	
			}
			break;
    10be:	00 00       	nop
				nokia_lcd_render();
				
			
			break;
		}
		}			
    10c0:	93 cc       	rjmp	.-1754   	; 0x9e8 <__stack+0xe9>

000010c2 <respirar>:
}

void respirar(uint8_t num){
    10c2:	cf 93       	push	r28
    10c4:	df 93       	push	r29
    10c6:	1f 92       	push	r1
    10c8:	cd b7       	in	r28, 0x3d	; 61
    10ca:	de b7       	in	r29, 0x3e	; 62
    10cc:	89 83       	std	Y+1, r24	; 0x01
		
	if(num <= 8)
    10ce:	89 81       	ldd	r24, Y+1	; 0x01
    10d0:	89 30       	cpi	r24, 0x09	; 9
    10d2:	88 f4       	brcc	.+34     	; 0x10f6 <respirar+0x34>
		OCR1B = (num*250)+2000;	
    10d4:	8a e8       	ldi	r24, 0x8A	; 138
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	29 81       	ldd	r18, Y+1	; 0x01
    10da:	42 2f       	mov	r20, r18
    10dc:	50 e0       	ldi	r21, 0x00	; 0
    10de:	6a ef       	ldi	r22, 0xFA	; 250
    10e0:	64 9f       	mul	r22, r20
    10e2:	90 01       	movw	r18, r0
    10e4:	65 9f       	mul	r22, r21
    10e6:	30 0d       	add	r19, r0
    10e8:	11 24       	eor	r1, r1
    10ea:	20 53       	subi	r18, 0x30	; 48
    10ec:	38 4f       	sbci	r19, 0xF8	; 248
    10ee:	fc 01       	movw	r30, r24
    10f0:	31 83       	std	Z+1, r19	; 0x01
    10f2:	20 83       	st	Z, r18
    10f4:	14 c0       	rjmp	.+40     	; 0x111e <respirar+0x5c>
	else
		OCR1B = ((17-num)*250)+2000;
    10f6:	8a e8       	ldi	r24, 0x8A	; 138
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	29 81       	ldd	r18, Y+1	; 0x01
    10fc:	22 2f       	mov	r18, r18
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	41 e1       	ldi	r20, 0x11	; 17
    1102:	50 e0       	ldi	r21, 0x00	; 0
    1104:	42 1b       	sub	r20, r18
    1106:	53 0b       	sbc	r21, r19
    1108:	6a ef       	ldi	r22, 0xFA	; 250
    110a:	64 9f       	mul	r22, r20
    110c:	90 01       	movw	r18, r0
    110e:	65 9f       	mul	r22, r21
    1110:	30 0d       	add	r19, r0
    1112:	11 24       	eor	r1, r1
    1114:	20 53       	subi	r18, 0x30	; 48
    1116:	38 4f       	sbci	r19, 0xF8	; 248
    1118:	fc 01       	movw	r30, r24
    111a:	31 83       	std	Z+1, r19	; 0x01
    111c:	20 83       	st	Z, r18
	if(OCR1B == 2000)
    111e:	8a e8       	ldi	r24, 0x8A	; 138
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	fc 01       	movw	r30, r24
    1124:	80 81       	ld	r24, Z
    1126:	91 81       	ldd	r25, Z+1	; 0x01
    1128:	80 3d       	cpi	r24, 0xD0	; 208
    112a:	97 40       	sbci	r25, 0x07	; 7
    112c:	51 f4       	brne	.+20     	; 0x1142 <respirar+0x80>
		PORTD |= 0b10000000;
    112e:	8b e2       	ldi	r24, 0x2B	; 43
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	2b e2       	ldi	r18, 0x2B	; 43
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	f9 01       	movw	r30, r18
    1138:	20 81       	ld	r18, Z
    113a:	20 68       	ori	r18, 0x80	; 128
    113c:	fc 01       	movw	r30, r24
    113e:	20 83       	st	Z, r18
	else
		PORTD &= 0b01111111;
}
    1140:	09 c0       	rjmp	.+18     	; 0x1154 <respirar+0x92>
	else
		OCR1B = ((17-num)*250)+2000;
	if(OCR1B == 2000)
		PORTD |= 0b10000000;
	else
		PORTD &= 0b01111111;
    1142:	8b e2       	ldi	r24, 0x2B	; 43
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	2b e2       	ldi	r18, 0x2B	; 43
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	f9 01       	movw	r30, r18
    114c:	20 81       	ld	r18, Z
    114e:	2f 77       	andi	r18, 0x7F	; 127
    1150:	fc 01       	movw	r30, r24
    1152:	20 83       	st	Z, r18
}
    1154:	00 00       	nop
    1156:	0f 90       	pop	r0
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	08 95       	ret

0000115e <int2string>:

void int2string(unsigned int valor, unsigned char *disp)
{
    115e:	cf 93       	push	r28
    1160:	df 93       	push	r29
    1162:	00 d0       	rcall	.+0      	; 0x1164 <int2string+0x6>
    1164:	00 d0       	rcall	.+0      	; 0x1166 <int2string+0x8>
    1166:	1f 92       	push	r1
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	9b 83       	std	Y+3, r25	; 0x03
    116e:	8a 83       	std	Y+2, r24	; 0x02
    1170:	7d 83       	std	Y+5, r23	; 0x05
    1172:	6c 83       	std	Y+4, r22	; 0x04
	for(uint8_t n=0; n<tam_vetor; n++)
    1174:	19 82       	std	Y+1, r1	; 0x01
    1176:	0d c0       	rjmp	.+26     	; 0x1192 <int2string+0x34>
	disp[n] = 0 + 48;
    1178:	89 81       	ldd	r24, Y+1	; 0x01
    117a:	88 2f       	mov	r24, r24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	2c 81       	ldd	r18, Y+4	; 0x04
    1180:	3d 81       	ldd	r19, Y+5	; 0x05
    1182:	82 0f       	add	r24, r18
    1184:	93 1f       	adc	r25, r19
    1186:	20 e3       	ldi	r18, 0x30	; 48
    1188:	fc 01       	movw	r30, r24
    118a:	20 83       	st	Z, r18
		PORTD &= 0b01111111;
}

void int2string(unsigned int valor, unsigned char *disp)
{
	for(uint8_t n=0; n<tam_vetor; n++)
    118c:	89 81       	ldd	r24, Y+1	; 0x01
    118e:	8f 5f       	subi	r24, 0xFF	; 255
    1190:	89 83       	std	Y+1, r24	; 0x01
    1192:	89 81       	ldd	r24, Y+1	; 0x01
    1194:	83 30       	cpi	r24, 0x03	; 3
    1196:	80 f3       	brcs	.-32     	; 0x1178 <int2string+0x1a>
	disp[n] = 0 + 48;
	disp += tam_vetor-1;
    1198:	8c 81       	ldd	r24, Y+4	; 0x04
    119a:	9d 81       	ldd	r25, Y+5	; 0x05
    119c:	02 96       	adiw	r24, 0x02	; 2
    119e:	9d 83       	std	Y+5, r25	; 0x05
    11a0:	8c 83       	std	Y+4, r24	; 0x04

	do
	{
		*disp = (valor%10) + 48;
    11a2:	4a 81       	ldd	r20, Y+2	; 0x02
    11a4:	5b 81       	ldd	r21, Y+3	; 0x03
    11a6:	9a 01       	movw	r18, r20
    11a8:	ad ec       	ldi	r26, 0xCD	; 205
    11aa:	bc ec       	ldi	r27, 0xCC	; 204
    11ac:	0e 94 ba 10 	call	0x2174	; 0x2174 <__umulhisi3>
    11b0:	96 95       	lsr	r25
    11b2:	87 95       	ror	r24
    11b4:	96 95       	lsr	r25
    11b6:	87 95       	ror	r24
    11b8:	96 95       	lsr	r25
    11ba:	87 95       	ror	r24
    11bc:	88 0f       	add	r24, r24
    11be:	99 1f       	adc	r25, r25
    11c0:	9c 01       	movw	r18, r24
    11c2:	22 0f       	add	r18, r18
    11c4:	33 1f       	adc	r19, r19
    11c6:	22 0f       	add	r18, r18
    11c8:	33 1f       	adc	r19, r19
    11ca:	82 0f       	add	r24, r18
    11cc:	93 1f       	adc	r25, r19
    11ce:	9a 01       	movw	r18, r20
    11d0:	28 1b       	sub	r18, r24
    11d2:	39 0b       	sbc	r19, r25
    11d4:	c9 01       	movw	r24, r18
    11d6:	20 e3       	ldi	r18, 0x30	; 48
    11d8:	28 0f       	add	r18, r24
    11da:	8c 81       	ldd	r24, Y+4	; 0x04
    11dc:	9d 81       	ldd	r25, Y+5	; 0x05
    11de:	fc 01       	movw	r30, r24
    11e0:	20 83       	st	Z, r18
		valor /= 10;
    11e2:	8a 81       	ldd	r24, Y+2	; 0x02
    11e4:	9b 81       	ldd	r25, Y+3	; 0x03
    11e6:	9c 01       	movw	r18, r24
    11e8:	ad ec       	ldi	r26, 0xCD	; 205
    11ea:	bc ec       	ldi	r27, 0xCC	; 204
    11ec:	0e 94 ba 10 	call	0x2174	; 0x2174 <__umulhisi3>
    11f0:	96 95       	lsr	r25
    11f2:	87 95       	ror	r24
    11f4:	96 95       	lsr	r25
    11f6:	87 95       	ror	r24
    11f8:	96 95       	lsr	r25
    11fa:	87 95       	ror	r24
    11fc:	9b 83       	std	Y+3, r25	; 0x03
    11fe:	8a 83       	std	Y+2, r24	; 0x02
		disp--;
    1200:	8c 81       	ldd	r24, Y+4	; 0x04
    1202:	9d 81       	ldd	r25, Y+5	; 0x05
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	9d 83       	std	Y+5, r25	; 0x05
    1208:	8c 83       	std	Y+4, r24	; 0x04
	}while(valor!=0);
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	9b 81       	ldd	r25, Y+3	; 0x03
    120e:	89 2b       	or	r24, r25
    1210:	41 f6       	brne	.-112    	; 0x11a2 <int2string+0x44>
}
    1212:	00 00       	nop
    1214:	0f 90       	pop	r0
    1216:	0f 90       	pop	r0
    1218:	0f 90       	pop	r0
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	08 95       	ret

00001224 <analisa_vetor>:

void analisa_vetor()
{	
    1224:	cf 93       	push	r28
    1226:	df 93       	push	r29
    1228:	cd b7       	in	r28, 0x3d	; 61
    122a:	de b7       	in	r29, 0x3e	; 62
    122c:	62 97       	sbiw	r28, 0x12	; 18
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	de bf       	out	0x3e, r29	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	cd bf       	out	0x3d, r28	; 61
	padrao = 0;
    1238:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <padrao+0x1>
    123c:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <padrao>
	switch(recebido[0])
    1240:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <recebido>
    1244:	88 2f       	mov	r24, r24
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	cb 97       	sbiw	r24, 0x3b	; 59
    124a:	09 f0       	breq	.+2      	; 0x124e <analisa_vetor+0x2a>
			}
			break;
		}
		break;
	}			
}
    124c:	e5 c1       	rjmp	.+970    	; 0x1618 <analisa_vetor+0x3f4>
{	
	padrao = 0;
	switch(recebido[0])
	{
		case ';':
		switch(recebido[1])
    124e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <recebido+0x1>
    1252:	88 2f       	mov	r24, r24
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	8e 36       	cpi	r24, 0x6E	; 110
    1258:	91 05       	cpc	r25, r1
    125a:	09 f0       	breq	.+2      	; 0x125e <analisa_vetor+0x3a>
				}
				break;
			}
			break;
		}
		break;
    125c:	dc c1       	rjmp	.+952    	; 0x1616 <analisa_vetor+0x3f2>
	{
		case ';':
		switch(recebido[1])
		{
			case 'n':
			switch(recebido[2])
    125e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <recebido+0x2>
    1262:	88 2f       	mov	r24, r24
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	8e 36       	cpi	r24, 0x6E	; 110
    1268:	91 05       	cpc	r25, r1
    126a:	29 f0       	breq	.+10     	; 0x1276 <analisa_vetor+0x52>
    126c:	88 37       	cpi	r24, 0x78	; 120
    126e:	91 05       	cpc	r25, r1
    1270:	09 f4       	brne	.+2      	; 0x1274 <analisa_vetor+0x50>
    1272:	3d c1       	rjmp	.+634    	; 0x14ee <analisa_vetor+0x2ca>
					}
					break;
				}
				break;
			}
			break;
    1274:	cf c1       	rjmp	.+926    	; 0x1614 <analisa_vetor+0x3f0>
		{
			case 'n':
			switch(recebido[2])
			{
				case 'n':
				switch(recebido[3])
    1276:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <recebido+0x3>
    127a:	88 2f       	mov	r24, r24
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	8e 36       	cpi	r24, 0x6E	; 110
    1280:	91 05       	cpc	r25, r1
    1282:	29 f0       	breq	.+10     	; 0x128e <analisa_vetor+0x6a>
    1284:	88 37       	cpi	r24, 0x78	; 120
    1286:	91 05       	cpc	r25, r1
    1288:	09 f4       	brne	.+2      	; 0x128c <analisa_vetor+0x68>
    128a:	9d c0       	rjmp	.+314    	; 0x13c6 <analisa_vetor+0x1a2>
						}
						break;
					}
					break;
				}
				break;
    128c:	c3 c1       	rjmp	.+902    	; 0x1614 <analisa_vetor+0x3f0>
			{
				case 'n':
				switch(recebido[3])
				{
					case 'n':
					switch(recebido[4])
    128e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <recebido+0x4>
    1292:	88 2f       	mov	r24, r24
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	88 37       	cpi	r24, 0x78	; 120
    1298:	91 05       	cpc	r25, r1
    129a:	09 f0       	breq	.+2      	; 0x129e <analisa_vetor+0x7a>
							}
							break;
						}
						break;
					}
					break;
    129c:	27 c1       	rjmp	.+590    	; 0x14ec <analisa_vetor+0x2c8>
				{
					case 'n':
					switch(recebido[4])
					{
						case 'x':
						switch(recebido[5])
    129e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <recebido+0x5>
    12a2:	88 2f       	mov	r24, r24
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	8e 36       	cpi	r24, 0x6E	; 110
    12a8:	91 05       	cpc	r25, r1
    12aa:	09 f0       	breq	.+2      	; 0x12ae <analisa_vetor+0x8a>
								recebido[i] = 198;
								break;
							}
							break;
						}
						break;
    12ac:	8a c0       	rjmp	.+276    	; 0x13c2 <analisa_vetor+0x19e>
					{
						case 'x':
						switch(recebido[5])
						{
							case'n':
							switch(recebido[6])
    12ae:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <recebido+0x6>
    12b2:	88 2f       	mov	r24, r24
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	8a 33       	cpi	r24, 0x3A	; 58
    12b8:	91 05       	cpc	r25, r1
    12ba:	09 f4       	brne	.+2      	; 0x12be <analisa_vetor+0x9a>
    12bc:	5e c0       	rjmp	.+188    	; 0x137a <analisa_vetor+0x156>
    12be:	8e 36       	cpi	r24, 0x6E	; 110
    12c0:	91 05       	cpc	r25, r1
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <analisa_vetor+0xa2>
								posicao = 0;
								for(int i=0;i<9;i++)
								recebido[i] = 198;
								break;
							}
							break;
    12c4:	7d c0       	rjmp	.+250    	; 0x13c0 <analisa_vetor+0x19c>
						{
							case'n':
							switch(recebido[6])
							{
								case 'n':
								switch(recebido[7])
    12c6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <recebido+0x7>
    12ca:	88 2f       	mov	r24, r24
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	8a 33       	cpi	r24, 0x3A	; 58
    12d0:	91 05       	cpc	r25, r1
    12d2:	79 f1       	breq	.+94     	; 0x1332 <analisa_vetor+0x10e>
    12d4:	8e 36       	cpi	r24, 0x6E	; 110
    12d6:	91 05       	cpc	r25, r1
    12d8:	09 f0       	breq	.+2      	; 0x12dc <analisa_vetor+0xb8>
									posicao = 0;
									for(int i=0;i<9;i++)
									recebido[i] = 198;
									break;
								}
								break;
    12da:	72 c0       	rjmp	.+228    	; 0x13c0 <analisa_vetor+0x19c>
							{
								case 'n':
								switch(recebido[7])
								{
									case 'n':
									switch(recebido[8])
    12dc:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <recebido+0x8>
    12e0:	88 2f       	mov	r24, r24
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	ca 97       	sbiw	r24, 0x3a	; 58
    12e6:	09 f0       	breq	.+2      	; 0x12ea <analisa_vetor+0xc6>
										z++;
										for(int i=0;i<9;i++)
										recebido[i] = 198;
										break;
									}
									break;
    12e8:	47 c0       	rjmp	.+142    	; 0x1378 <analisa_vetor+0x154>
								{
									case 'n':
									switch(recebido[8])
									{
										case':':
										padrao = 1;									
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    12f2:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
										posicao = 0;
    12f6:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    12fa:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
										z++;
    12fe:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    1302:	8f 5f       	subi	r24, 0xFF	; 255
    1304:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
										for(int i=0;i<9;i++)
    1308:	1a 82       	std	Y+2, r1	; 0x02
    130a:	19 82       	std	Y+1, r1	; 0x01
    130c:	0c c0       	rjmp	.+24     	; 0x1326 <analisa_vetor+0x102>
										recebido[i] = 198;
    130e:	89 81       	ldd	r24, Y+1	; 0x01
    1310:	9a 81       	ldd	r25, Y+2	; 0x02
    1312:	8c 5f       	subi	r24, 0xFC	; 252
    1314:	9e 4f       	sbci	r25, 0xFE	; 254
    1316:	26 ec       	ldi	r18, 0xC6	; 198
    1318:	fc 01       	movw	r30, r24
    131a:	20 83       	st	Z, r18
									{
										case':':
										padrao = 1;									
										posicao = 0;
										z++;
										for(int i=0;i<9;i++)
    131c:	89 81       	ldd	r24, Y+1	; 0x01
    131e:	9a 81       	ldd	r25, Y+2	; 0x02
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	9a 83       	std	Y+2, r25	; 0x02
    1324:	89 83       	std	Y+1, r24	; 0x01
    1326:	89 81       	ldd	r24, Y+1	; 0x01
    1328:	9a 81       	ldd	r25, Y+2	; 0x02
    132a:	09 97       	sbiw	r24, 0x09	; 9
    132c:	84 f3       	brlt	.-32     	; 0x130e <analisa_vetor+0xea>
										recebido[i] = 198;
										break;
    132e:	00 00       	nop
									}
									break;
    1330:	23 c0       	rjmp	.+70     	; 0x1378 <analisa_vetor+0x154>
									case ':':
									padrao = 2;
    1332:	82 e0       	ldi	r24, 0x02	; 2
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    133a:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
									z++;									
    133e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    1342:	8f 5f       	subi	r24, 0xFF	; 255
    1344:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
									posicao = 0;
    1348:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    134c:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
									for(int i=0;i<9;i++)
    1350:	1c 82       	std	Y+4, r1	; 0x04
    1352:	1b 82       	std	Y+3, r1	; 0x03
    1354:	0c c0       	rjmp	.+24     	; 0x136e <analisa_vetor+0x14a>
									recebido[i] = 198;
    1356:	8b 81       	ldd	r24, Y+3	; 0x03
    1358:	9c 81       	ldd	r25, Y+4	; 0x04
    135a:	8c 5f       	subi	r24, 0xFC	; 252
    135c:	9e 4f       	sbci	r25, 0xFE	; 254
    135e:	26 ec       	ldi	r18, 0xC6	; 198
    1360:	fc 01       	movw	r30, r24
    1362:	20 83       	st	Z, r18
									break;
									case ':':
									padrao = 2;
									z++;									
									posicao = 0;
									for(int i=0;i<9;i++)
    1364:	8b 81       	ldd	r24, Y+3	; 0x03
    1366:	9c 81       	ldd	r25, Y+4	; 0x04
    1368:	01 96       	adiw	r24, 0x01	; 1
    136a:	9c 83       	std	Y+4, r25	; 0x04
    136c:	8b 83       	std	Y+3, r24	; 0x03
    136e:	8b 81       	ldd	r24, Y+3	; 0x03
    1370:	9c 81       	ldd	r25, Y+4	; 0x04
    1372:	09 97       	sbiw	r24, 0x09	; 9
    1374:	84 f3       	brlt	.-32     	; 0x1356 <analisa_vetor+0x132>
									recebido[i] = 198;
									break;
    1376:	00 00       	nop
								}
								break;
    1378:	23 c0       	rjmp	.+70     	; 0x13c0 <analisa_vetor+0x19c>
								case ':':
								z++;
    137a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    137e:	8f 5f       	subi	r24, 0xFF	; 255
    1380:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
								padrao = 9;								
    1384:	89 e0       	ldi	r24, 0x09	; 9
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    138c:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
								posicao = 0;
    1390:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    1394:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
								for(int i=0;i<9;i++)
    1398:	1e 82       	std	Y+6, r1	; 0x06
    139a:	1d 82       	std	Y+5, r1	; 0x05
    139c:	0c c0       	rjmp	.+24     	; 0x13b6 <analisa_vetor+0x192>
								recebido[i] = 198;
    139e:	8d 81       	ldd	r24, Y+5	; 0x05
    13a0:	9e 81       	ldd	r25, Y+6	; 0x06
    13a2:	8c 5f       	subi	r24, 0xFC	; 252
    13a4:	9e 4f       	sbci	r25, 0xFE	; 254
    13a6:	26 ec       	ldi	r18, 0xC6	; 198
    13a8:	fc 01       	movw	r30, r24
    13aa:	20 83       	st	Z, r18
								break;
								case ':':
								z++;
								padrao = 9;								
								posicao = 0;
								for(int i=0;i<9;i++)
    13ac:	8d 81       	ldd	r24, Y+5	; 0x05
    13ae:	9e 81       	ldd	r25, Y+6	; 0x06
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	9e 83       	std	Y+6, r25	; 0x06
    13b4:	8d 83       	std	Y+5, r24	; 0x05
    13b6:	8d 81       	ldd	r24, Y+5	; 0x05
    13b8:	9e 81       	ldd	r25, Y+6	; 0x06
    13ba:	09 97       	sbiw	r24, 0x09	; 9
    13bc:	84 f3       	brlt	.-32     	; 0x139e <analisa_vetor+0x17a>
								recebido[i] = 198;
								break;
    13be:	00 00       	nop
							}
							break;
    13c0:	00 00       	nop
						}
						break;
    13c2:	00 00       	nop
					}
					break;
    13c4:	93 c0       	rjmp	.+294    	; 0x14ec <analisa_vetor+0x2c8>
					case 'x':
					switch(recebido[4])
    13c6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <recebido+0x4>
    13ca:	88 2f       	mov	r24, r24
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	8e 36       	cpi	r24, 0x6E	; 110
    13d0:	91 05       	cpc	r25, r1
    13d2:	09 f0       	breq	.+2      	; 0x13d6 <analisa_vetor+0x1b2>
							recebido[i] = 198;
							break;
						}
						break;
					}
					break;
    13d4:	8a c0       	rjmp	.+276    	; 0x14ea <analisa_vetor+0x2c6>
					break;
					case 'x':
					switch(recebido[4])
					{
						case 'n':
						switch(recebido[5])
    13d6:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <recebido+0x5>
    13da:	88 2f       	mov	r24, r24
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	8a 33       	cpi	r24, 0x3A	; 58
    13e0:	91 05       	cpc	r25, r1
    13e2:	09 f4       	brne	.+2      	; 0x13e6 <analisa_vetor+0x1c2>
    13e4:	5e c0       	rjmp	.+188    	; 0x14a2 <analisa_vetor+0x27e>
    13e6:	8e 36       	cpi	r24, 0x6E	; 110
    13e8:	91 05       	cpc	r25, r1
    13ea:	09 f0       	breq	.+2      	; 0x13ee <analisa_vetor+0x1ca>
							posicao = 0;
							for(int i=0;i<9;i++)
							recebido[i] = 198;
							break;
						}
						break;
    13ec:	7d c0       	rjmp	.+250    	; 0x14e8 <analisa_vetor+0x2c4>
					{
						case 'n':
						switch(recebido[5])
						{
							case 'n':
							switch(recebido[6])
    13ee:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <recebido+0x6>
    13f2:	88 2f       	mov	r24, r24
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	8a 33       	cpi	r24, 0x3A	; 58
    13f8:	91 05       	cpc	r25, r1
    13fa:	79 f1       	breq	.+94     	; 0x145a <analisa_vetor+0x236>
    13fc:	8e 36       	cpi	r24, 0x6E	; 110
    13fe:	91 05       	cpc	r25, r1
    1400:	09 f0       	breq	.+2      	; 0x1404 <analisa_vetor+0x1e0>
								posicao = 0;
								for(int i=0;i<9;i++)
								recebido[i] = 198;
								break;
							}
							break;
    1402:	72 c0       	rjmp	.+228    	; 0x14e8 <analisa_vetor+0x2c4>
						{
							case 'n':
							switch(recebido[6])
							{
								case 'n':
								switch(recebido[7])
    1404:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <recebido+0x7>
    1408:	88 2f       	mov	r24, r24
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	ca 97       	sbiw	r24, 0x3a	; 58
    140e:	09 f0       	breq	.+2      	; 0x1412 <analisa_vetor+0x1ee>
									posicao = 0;
									for(int i=0;i<9;i++)
									recebido[i] = 198;
									break;
								}
								break;
    1410:	47 c0       	rjmp	.+142    	; 0x14a0 <analisa_vetor+0x27c>
							{
								case 'n':
								switch(recebido[7])
								{
									case ':':
									padrao = 3;
    1412:	83 e0       	ldi	r24, 0x03	; 3
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    141a:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
									z++;									
    141e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    1422:	8f 5f       	subi	r24, 0xFF	; 255
    1424:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
									posicao = 0;
    1428:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    142c:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
									for(int i=0;i<9;i++)
    1430:	18 86       	std	Y+8, r1	; 0x08
    1432:	1f 82       	std	Y+7, r1	; 0x07
    1434:	0c c0       	rjmp	.+24     	; 0x144e <analisa_vetor+0x22a>
									recebido[i] = 198;
    1436:	8f 81       	ldd	r24, Y+7	; 0x07
    1438:	98 85       	ldd	r25, Y+8	; 0x08
    143a:	8c 5f       	subi	r24, 0xFC	; 252
    143c:	9e 4f       	sbci	r25, 0xFE	; 254
    143e:	26 ec       	ldi	r18, 0xC6	; 198
    1440:	fc 01       	movw	r30, r24
    1442:	20 83       	st	Z, r18
								{
									case ':':
									padrao = 3;
									z++;									
									posicao = 0;
									for(int i=0;i<9;i++)
    1444:	8f 81       	ldd	r24, Y+7	; 0x07
    1446:	98 85       	ldd	r25, Y+8	; 0x08
    1448:	01 96       	adiw	r24, 0x01	; 1
    144a:	98 87       	std	Y+8, r25	; 0x08
    144c:	8f 83       	std	Y+7, r24	; 0x07
    144e:	8f 81       	ldd	r24, Y+7	; 0x07
    1450:	98 85       	ldd	r25, Y+8	; 0x08
    1452:	09 97       	sbiw	r24, 0x09	; 9
    1454:	84 f3       	brlt	.-32     	; 0x1436 <analisa_vetor+0x212>
									recebido[i] = 198;
									break;
    1456:	00 00       	nop
								}
								break;
    1458:	23 c0       	rjmp	.+70     	; 0x14a0 <analisa_vetor+0x27c>
								case ':':
								padrao = 4;	
    145a:	84 e0       	ldi	r24, 0x04	; 4
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    1462:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
								z++;							
    1466:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    146a:	8f 5f       	subi	r24, 0xFF	; 255
    146c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
								posicao = 0;
    1470:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    1474:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
								for(int i=0;i<9;i++)
    1478:	1a 86       	std	Y+10, r1	; 0x0a
    147a:	19 86       	std	Y+9, r1	; 0x09
    147c:	0c c0       	rjmp	.+24     	; 0x1496 <analisa_vetor+0x272>
								recebido[i] = 198;
    147e:	89 85       	ldd	r24, Y+9	; 0x09
    1480:	9a 85       	ldd	r25, Y+10	; 0x0a
    1482:	8c 5f       	subi	r24, 0xFC	; 252
    1484:	9e 4f       	sbci	r25, 0xFE	; 254
    1486:	26 ec       	ldi	r18, 0xC6	; 198
    1488:	fc 01       	movw	r30, r24
    148a:	20 83       	st	Z, r18
								break;
								case ':':
								padrao = 4;	
								z++;							
								posicao = 0;
								for(int i=0;i<9;i++)
    148c:	89 85       	ldd	r24, Y+9	; 0x09
    148e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1490:	01 96       	adiw	r24, 0x01	; 1
    1492:	9a 87       	std	Y+10, r25	; 0x0a
    1494:	89 87       	std	Y+9, r24	; 0x09
    1496:	89 85       	ldd	r24, Y+9	; 0x09
    1498:	9a 85       	ldd	r25, Y+10	; 0x0a
    149a:	09 97       	sbiw	r24, 0x09	; 9
    149c:	84 f3       	brlt	.-32     	; 0x147e <analisa_vetor+0x25a>
								recebido[i] = 198;
								break;
    149e:	00 00       	nop
							}
							break;
    14a0:	23 c0       	rjmp	.+70     	; 0x14e8 <analisa_vetor+0x2c4>
							case ':':
							padrao = 5;				
    14a2:	85 e0       	ldi	r24, 0x05	; 5
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    14aa:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
							z++;			
    14ae:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    14b2:	8f 5f       	subi	r24, 0xFF	; 255
    14b4:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
							posicao = 0;
    14b8:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    14bc:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
							for(int i=0;i<9;i++)
    14c0:	1c 86       	std	Y+12, r1	; 0x0c
    14c2:	1b 86       	std	Y+11, r1	; 0x0b
    14c4:	0c c0       	rjmp	.+24     	; 0x14de <analisa_vetor+0x2ba>
							recebido[i] = 198;
    14c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    14c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    14ca:	8c 5f       	subi	r24, 0xFC	; 252
    14cc:	9e 4f       	sbci	r25, 0xFE	; 254
    14ce:	26 ec       	ldi	r18, 0xC6	; 198
    14d0:	fc 01       	movw	r30, r24
    14d2:	20 83       	st	Z, r18
							break;
							case ':':
							padrao = 5;				
							z++;			
							posicao = 0;
							for(int i=0;i<9;i++)
    14d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    14d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	9c 87       	std	Y+12, r25	; 0x0c
    14dc:	8b 87       	std	Y+11, r24	; 0x0b
    14de:	8b 85       	ldd	r24, Y+11	; 0x0b
    14e0:	9c 85       	ldd	r25, Y+12	; 0x0c
    14e2:	09 97       	sbiw	r24, 0x09	; 9
    14e4:	84 f3       	brlt	.-32     	; 0x14c6 <analisa_vetor+0x2a2>
							recebido[i] = 198;
							break;
    14e6:	00 00       	nop
						}
						break;
    14e8:	00 00       	nop
					}
					break;
    14ea:	00 00       	nop
				}
				break;
    14ec:	93 c0       	rjmp	.+294    	; 0x1614 <analisa_vetor+0x3f0>
				case 'x':
				switch(recebido[3])
    14ee:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <recebido+0x3>
    14f2:	88 2f       	mov	r24, r24
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	8e 36       	cpi	r24, 0x6E	; 110
    14f8:	91 05       	cpc	r25, r1
    14fa:	09 f0       	breq	.+2      	; 0x14fe <analisa_vetor+0x2da>
						recebido[i] = 198;
						break;
					}
					break;
				}
				break;
    14fc:	8a c0       	rjmp	.+276    	; 0x1612 <analisa_vetor+0x3ee>
				break;
				case 'x':
				switch(recebido[3])
				{
					case 'n':
					switch(recebido[4])
    14fe:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <recebido+0x4>
    1502:	88 2f       	mov	r24, r24
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	8a 33       	cpi	r24, 0x3A	; 58
    1508:	91 05       	cpc	r25, r1
    150a:	09 f4       	brne	.+2      	; 0x150e <analisa_vetor+0x2ea>
    150c:	5e c0       	rjmp	.+188    	; 0x15ca <analisa_vetor+0x3a6>
    150e:	8e 36       	cpi	r24, 0x6E	; 110
    1510:	91 05       	cpc	r25, r1
    1512:	09 f0       	breq	.+2      	; 0x1516 <analisa_vetor+0x2f2>
						posicao = 0;
						for(int i=0;i<9;i++)
						recebido[i] = 198;
						break;
					}
					break;
    1514:	7d c0       	rjmp	.+250    	; 0x1610 <analisa_vetor+0x3ec>
				{
					case 'n':
					switch(recebido[4])
					{
						case 'n':
						switch(recebido[5])
    1516:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <recebido+0x5>
    151a:	88 2f       	mov	r24, r24
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	8a 33       	cpi	r24, 0x3A	; 58
    1520:	91 05       	cpc	r25, r1
    1522:	79 f1       	breq	.+94     	; 0x1582 <analisa_vetor+0x35e>
    1524:	8e 36       	cpi	r24, 0x6E	; 110
    1526:	91 05       	cpc	r25, r1
    1528:	09 f0       	breq	.+2      	; 0x152c <analisa_vetor+0x308>
							posicao = 0;
							for(int i=0;i<9;i++)
							recebido[i] = 198;
							break;
						}
						break;
    152a:	72 c0       	rjmp	.+228    	; 0x1610 <analisa_vetor+0x3ec>
					{
						case 'n':
						switch(recebido[5])
						{
							case 'n':
							switch(recebido[6])
    152c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <recebido+0x6>
    1530:	88 2f       	mov	r24, r24
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	ca 97       	sbiw	r24, 0x3a	; 58
    1536:	09 f0       	breq	.+2      	; 0x153a <analisa_vetor+0x316>
								posicao = 0;
								for(int i=0;i<9;i++)
								recebido[i] = 198;
								break;
							}
							break;
    1538:	47 c0       	rjmp	.+142    	; 0x15c8 <analisa_vetor+0x3a4>
						{
							case 'n':
							switch(recebido[6])
							{
								case ':':
								z++;
    153a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    153e:	8f 5f       	subi	r24, 0xFF	; 255
    1540:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
								padrao = 6;								
    1544:	86 e0       	ldi	r24, 0x06	; 6
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    154c:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
								posicao = 0;
    1550:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    1554:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
								for(int i=0;i<9;i++)
    1558:	1e 86       	std	Y+14, r1	; 0x0e
    155a:	1d 86       	std	Y+13, r1	; 0x0d
    155c:	0c c0       	rjmp	.+24     	; 0x1576 <analisa_vetor+0x352>
								recebido[i] = 198;
    155e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1560:	9e 85       	ldd	r25, Y+14	; 0x0e
    1562:	8c 5f       	subi	r24, 0xFC	; 252
    1564:	9e 4f       	sbci	r25, 0xFE	; 254
    1566:	26 ec       	ldi	r18, 0xC6	; 198
    1568:	fc 01       	movw	r30, r24
    156a:	20 83       	st	Z, r18
							{
								case ':':
								z++;
								padrao = 6;								
								posicao = 0;
								for(int i=0;i<9;i++)
    156c:	8d 85       	ldd	r24, Y+13	; 0x0d
    156e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1570:	01 96       	adiw	r24, 0x01	; 1
    1572:	9e 87       	std	Y+14, r25	; 0x0e
    1574:	8d 87       	std	Y+13, r24	; 0x0d
    1576:	8d 85       	ldd	r24, Y+13	; 0x0d
    1578:	9e 85       	ldd	r25, Y+14	; 0x0e
    157a:	09 97       	sbiw	r24, 0x09	; 9
    157c:	84 f3       	brlt	.-32     	; 0x155e <analisa_vetor+0x33a>
								recebido[i] = 198;
								break;
    157e:	00 00       	nop
							}
							break;
    1580:	23 c0       	rjmp	.+70     	; 0x15c8 <analisa_vetor+0x3a4>
							case ':':
							z++;
    1582:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    1586:	8f 5f       	subi	r24, 0xFF	; 255
    1588:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
							padrao = 7;							
    158c:	87 e0       	ldi	r24, 0x07	; 7
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    1594:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
							posicao = 0;
    1598:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    159c:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
							for(int i=0;i<9;i++)
    15a0:	18 8a       	std	Y+16, r1	; 0x10
    15a2:	1f 86       	std	Y+15, r1	; 0x0f
    15a4:	0c c0       	rjmp	.+24     	; 0x15be <analisa_vetor+0x39a>
							recebido[i] = 198;
    15a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    15a8:	98 89       	ldd	r25, Y+16	; 0x10
    15aa:	8c 5f       	subi	r24, 0xFC	; 252
    15ac:	9e 4f       	sbci	r25, 0xFE	; 254
    15ae:	26 ec       	ldi	r18, 0xC6	; 198
    15b0:	fc 01       	movw	r30, r24
    15b2:	20 83       	st	Z, r18
							break;
							case ':':
							z++;
							padrao = 7;							
							posicao = 0;
							for(int i=0;i<9;i++)
    15b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    15b6:	98 89       	ldd	r25, Y+16	; 0x10
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	98 8b       	std	Y+16, r25	; 0x10
    15bc:	8f 87       	std	Y+15, r24	; 0x0f
    15be:	8f 85       	ldd	r24, Y+15	; 0x0f
    15c0:	98 89       	ldd	r25, Y+16	; 0x10
    15c2:	09 97       	sbiw	r24, 0x09	; 9
    15c4:	84 f3       	brlt	.-32     	; 0x15a6 <analisa_vetor+0x382>
							recebido[i] = 198;
							break;
    15c6:	00 00       	nop
						}
						break;
    15c8:	23 c0       	rjmp	.+70     	; 0x1610 <analisa_vetor+0x3ec>
						case ':':
						z++;
    15ca:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <z>
    15ce:	8f 5f       	subi	r24, 0xFF	; 255
    15d0:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <z>
						padrao = 8;						
    15d4:	88 e0       	ldi	r24, 0x08	; 8
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <padrao+0x1>
    15dc:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <padrao>
						posicao = 0;
    15e0:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <posicao+0x1>
    15e4:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <posicao>
						for(int i=0;i<9;i++)
    15e8:	1a 8a       	std	Y+18, r1	; 0x12
    15ea:	19 8a       	std	Y+17, r1	; 0x11
    15ec:	0c c0       	rjmp	.+24     	; 0x1606 <analisa_vetor+0x3e2>
						recebido[i] = 198;
    15ee:	89 89       	ldd	r24, Y+17	; 0x11
    15f0:	9a 89       	ldd	r25, Y+18	; 0x12
    15f2:	8c 5f       	subi	r24, 0xFC	; 252
    15f4:	9e 4f       	sbci	r25, 0xFE	; 254
    15f6:	26 ec       	ldi	r18, 0xC6	; 198
    15f8:	fc 01       	movw	r30, r24
    15fa:	20 83       	st	Z, r18
						break;
						case ':':
						z++;
						padrao = 8;						
						posicao = 0;
						for(int i=0;i<9;i++)
    15fc:	89 89       	ldd	r24, Y+17	; 0x11
    15fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1600:	01 96       	adiw	r24, 0x01	; 1
    1602:	9a 8b       	std	Y+18, r25	; 0x12
    1604:	89 8b       	std	Y+17, r24	; 0x11
    1606:	89 89       	ldd	r24, Y+17	; 0x11
    1608:	9a 89       	ldd	r25, Y+18	; 0x12
    160a:	09 97       	sbiw	r24, 0x09	; 9
    160c:	84 f3       	brlt	.-32     	; 0x15ee <analisa_vetor+0x3ca>
	...
			}
			break;
		}
		break;
	}			
}
    161a:	62 96       	adiw	r28, 0x12	; 18
    161c:	0f b6       	in	r0, 0x3f	; 63
    161e:	f8 94       	cli
    1620:	de bf       	out	0x3e, r29	; 62
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	cd bf       	out	0x3d, r28	; 61
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	08 95       	ret

0000162c <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
    162c:	1f 93       	push	r17
    162e:	cf 93       	push	r28
    1630:	df 93       	push	r29
    1632:	00 d0       	rcall	.+0      	; 0x1634 <write+0x8>
    1634:	cd b7       	in	r28, 0x3d	; 61
    1636:	de b7       	in	r29, 0x3e	; 62
    1638:	89 83       	std	Y+1, r24	; 0x01
    163a:	6a 83       	std	Y+2, r22	; 0x02
    163c:	88 e2       	ldi	r24, 0x28	; 40
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	28 e2       	ldi	r18, 0x28	; 40
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	f9 01       	movw	r30, r18
    1646:	20 81       	ld	r18, Z
    1648:	2f 7b       	andi	r18, 0xBF	; 191
    164a:	fc 01       	movw	r30, r24
    164c:	20 83       	st	Z, r18
    164e:	8a 81       	ldd	r24, Y+2	; 0x02
    1650:	88 23       	and	r24, r24
    1652:	51 f0       	breq	.+20     	; 0x1668 <write+0x3c>
    1654:	88 e2       	ldi	r24, 0x28	; 40
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	28 e2       	ldi	r18, 0x28	; 40
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	f9 01       	movw	r30, r18
    165e:	20 81       	ld	r18, Z
    1660:	28 60       	ori	r18, 0x08	; 8
    1662:	fc 01       	movw	r30, r24
    1664:	20 83       	st	Z, r18
    1666:	09 c0       	rjmp	.+18     	; 0x167a <write+0x4e>
    1668:	88 e2       	ldi	r24, 0x28	; 40
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	28 e2       	ldi	r18, 0x28	; 40
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	f9 01       	movw	r30, r18
    1672:	20 81       	ld	r18, Z
    1674:	27 7f       	andi	r18, 0xF7	; 247
    1676:	fc 01       	movw	r30, r24
    1678:	20 83       	st	Z, r18
    167a:	10 e0       	ldi	r17, 0x00	; 0
    167c:	3c c0       	rjmp	.+120    	; 0x16f6 <write+0xca>
    167e:	89 81       	ldd	r24, Y+1	; 0x01
    1680:	88 2f       	mov	r24, r24
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	21 2f       	mov	r18, r17
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	47 e0       	ldi	r20, 0x07	; 7
    168a:	50 e0       	ldi	r21, 0x00	; 0
    168c:	ba 01       	movw	r22, r20
    168e:	62 1b       	sub	r22, r18
    1690:	73 0b       	sbc	r23, r19
    1692:	9b 01       	movw	r18, r22
    1694:	02 c0       	rjmp	.+4      	; 0x169a <write+0x6e>
    1696:	95 95       	asr	r25
    1698:	87 95       	ror	r24
    169a:	2a 95       	dec	r18
    169c:	e2 f7       	brpl	.-8      	; 0x1696 <write+0x6a>
    169e:	81 70       	andi	r24, 0x01	; 1
    16a0:	99 27       	eor	r25, r25
    16a2:	89 2b       	or	r24, r25
    16a4:	51 f0       	breq	.+20     	; 0x16ba <write+0x8e>
    16a6:	88 e2       	ldi	r24, 0x28	; 40
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	28 e2       	ldi	r18, 0x28	; 40
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	f9 01       	movw	r30, r18
    16b0:	20 81       	ld	r18, Z
    16b2:	20 61       	ori	r18, 0x10	; 16
    16b4:	fc 01       	movw	r30, r24
    16b6:	20 83       	st	Z, r18
    16b8:	09 c0       	rjmp	.+18     	; 0x16cc <write+0xa0>
    16ba:	88 e2       	ldi	r24, 0x28	; 40
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	28 e2       	ldi	r18, 0x28	; 40
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	f9 01       	movw	r30, r18
    16c4:	20 81       	ld	r18, Z
    16c6:	2f 7e       	andi	r18, 0xEF	; 239
    16c8:	fc 01       	movw	r30, r24
    16ca:	20 83       	st	Z, r18
    16cc:	88 e2       	ldi	r24, 0x28	; 40
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	28 e2       	ldi	r18, 0x28	; 40
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	f9 01       	movw	r30, r18
    16d6:	20 81       	ld	r18, Z
    16d8:	20 62       	ori	r18, 0x20	; 32
    16da:	fc 01       	movw	r30, r24
    16dc:	20 83       	st	Z, r18
    16de:	88 e2       	ldi	r24, 0x28	; 40
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	28 e2       	ldi	r18, 0x28	; 40
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	f9 01       	movw	r30, r18
    16e8:	20 81       	ld	r18, Z
    16ea:	2f 7d       	andi	r18, 0xDF	; 223
    16ec:	fc 01       	movw	r30, r24
    16ee:	20 83       	st	Z, r18
    16f0:	81 2f       	mov	r24, r17
    16f2:	11 e0       	ldi	r17, 0x01	; 1
    16f4:	18 0f       	add	r17, r24
    16f6:	18 30       	cpi	r17, 0x08	; 8
    16f8:	10 f2       	brcs	.-124    	; 0x167e <write+0x52>
    16fa:	88 e2       	ldi	r24, 0x28	; 40
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	28 e2       	ldi	r18, 0x28	; 40
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	f9 01       	movw	r30, r18
    1704:	20 81       	ld	r18, Z
    1706:	20 64       	ori	r18, 0x40	; 64
    1708:	fc 01       	movw	r30, r24
    170a:	20 83       	st	Z, r18
    170c:	00 00       	nop
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	08 95       	ret

0000171a <write_cmd>:
    171a:	cf 93       	push	r28
    171c:	df 93       	push	r29
    171e:	1f 92       	push	r1
    1720:	cd b7       	in	r28, 0x3d	; 61
    1722:	de b7       	in	r29, 0x3e	; 62
    1724:	89 83       	std	Y+1, r24	; 0x01
    1726:	60 e0       	ldi	r22, 0x00	; 0
    1728:	89 81       	ldd	r24, Y+1	; 0x01
    172a:	0e 94 16 0b 	call	0x162c	; 0x162c <write>
    172e:	00 00       	nop
    1730:	0f 90       	pop	r0
    1732:	df 91       	pop	r29
    1734:	cf 91       	pop	r28
    1736:	08 95       	ret

00001738 <write_data>:
    1738:	cf 93       	push	r28
    173a:	df 93       	push	r29
    173c:	1f 92       	push	r1
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	89 83       	std	Y+1, r24	; 0x01
    1744:	61 e0       	ldi	r22, 0x01	; 1
    1746:	89 81       	ldd	r24, Y+1	; 0x01
    1748:	0e 94 16 0b 	call	0x162c	; 0x162c <write>
    174c:	00 00       	nop
    174e:	0f 90       	pop	r0
    1750:	df 91       	pop	r29
    1752:	cf 91       	pop	r28
    1754:	08 95       	ret

00001756 <nokia_lcd_init>:
    1756:	0f 93       	push	r16
    1758:	1f 93       	push	r17
    175a:	cf 93       	push	r28
    175c:	df 93       	push	r29
    175e:	cd b7       	in	r28, 0x3d	; 61
    1760:	de b7       	in	r29, 0x3e	; 62
    1762:	6c 97       	sbiw	r28, 0x1c	; 28
    1764:	0f b6       	in	r0, 0x3f	; 63
    1766:	f8 94       	cli
    1768:	de bf       	out	0x3e, r29	; 62
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	cd bf       	out	0x3d, r28	; 61
    176e:	87 e2       	ldi	r24, 0x27	; 39
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	27 e2       	ldi	r18, 0x27	; 39
    1774:	30 e0       	ldi	r19, 0x00	; 0
    1776:	f9 01       	movw	r30, r18
    1778:	20 81       	ld	r18, Z
    177a:	20 64       	ori	r18, 0x40	; 64
    177c:	fc 01       	movw	r30, r24
    177e:	20 83       	st	Z, r18
    1780:	87 e2       	ldi	r24, 0x27	; 39
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	27 e2       	ldi	r18, 0x27	; 39
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	f9 01       	movw	r30, r18
    178a:	20 81       	ld	r18, Z
    178c:	24 60       	ori	r18, 0x04	; 4
    178e:	fc 01       	movw	r30, r24
    1790:	20 83       	st	Z, r18
    1792:	87 e2       	ldi	r24, 0x27	; 39
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	27 e2       	ldi	r18, 0x27	; 39
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	f9 01       	movw	r30, r18
    179c:	20 81       	ld	r18, Z
    179e:	28 60       	ori	r18, 0x08	; 8
    17a0:	fc 01       	movw	r30, r24
    17a2:	20 83       	st	Z, r18
    17a4:	87 e2       	ldi	r24, 0x27	; 39
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	27 e2       	ldi	r18, 0x27	; 39
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	f9 01       	movw	r30, r18
    17ae:	20 81       	ld	r18, Z
    17b0:	20 61       	ori	r18, 0x10	; 16
    17b2:	fc 01       	movw	r30, r24
    17b4:	20 83       	st	Z, r18
    17b6:	87 e2       	ldi	r24, 0x27	; 39
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	27 e2       	ldi	r18, 0x27	; 39
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	f9 01       	movw	r30, r18
    17c0:	20 81       	ld	r18, Z
    17c2:	20 62       	ori	r18, 0x20	; 32
    17c4:	fc 01       	movw	r30, r24
    17c6:	20 83       	st	Z, r18
    17c8:	88 e2       	ldi	r24, 0x28	; 40
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	28 e2       	ldi	r18, 0x28	; 40
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	f9 01       	movw	r30, r18
    17d2:	20 81       	ld	r18, Z
    17d4:	24 60       	ori	r18, 0x04	; 4
    17d6:	fc 01       	movw	r30, r24
    17d8:	20 83       	st	Z, r18
    17da:	88 e2       	ldi	r24, 0x28	; 40
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	28 e2       	ldi	r18, 0x28	; 40
    17e0:	30 e0       	ldi	r19, 0x00	; 0
    17e2:	f9 01       	movw	r30, r18
    17e4:	20 81       	ld	r18, Z
    17e6:	20 64       	ori	r18, 0x40	; 64
    17e8:	fc 01       	movw	r30, r24
    17ea:	20 83       	st	Z, r18
    17ec:	80 e0       	ldi	r24, 0x00	; 0
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	a0 e2       	ldi	r26, 0x20	; 32
    17f2:	b1 e4       	ldi	r27, 0x41	; 65
    17f4:	89 83       	std	Y+1, r24	; 0x01
    17f6:	9a 83       	std	Y+2, r25	; 0x02
    17f8:	ab 83       	std	Y+3, r26	; 0x03
    17fa:	bc 83       	std	Y+4, r27	; 0x04
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	4a e7       	ldi	r20, 0x7A	; 122
    1802:	53 e4       	ldi	r21, 0x43	; 67
    1804:	69 81       	ldd	r22, Y+1	; 0x01
    1806:	7a 81       	ldd	r23, Y+2	; 0x02
    1808:	8b 81       	ldd	r24, Y+3	; 0x03
    180a:	9c 81       	ldd	r25, Y+4	; 0x04
    180c:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	8b 8b       	std	Y+19, r24	; 0x13
    1816:	9c 8b       	std	Y+20, r25	; 0x14
    1818:	ad 8b       	std	Y+21, r26	; 0x15
    181a:	be 8b       	std	Y+22, r27	; 0x16
    181c:	20 e0       	ldi	r18, 0x00	; 0
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	40 e8       	ldi	r20, 0x80	; 128
    1822:	5f e3       	ldi	r21, 0x3F	; 63
    1824:	6b 89       	ldd	r22, Y+19	; 0x13
    1826:	7c 89       	ldd	r23, Y+20	; 0x14
    1828:	8d 89       	ldd	r24, Y+21	; 0x15
    182a:	9e 89       	ldd	r25, Y+22	; 0x16
    182c:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <__cmpsf2>
    1830:	88 23       	and	r24, r24
    1832:	2c f4       	brge	.+10     	; 0x183e <nokia_lcd_init+0xe8>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	98 8f       	std	Y+24, r25	; 0x18
    183a:	8f 8b       	std	Y+23, r24	; 0x17
    183c:	3f c0       	rjmp	.+126    	; 0x18bc <nokia_lcd_init+0x166>
    183e:	20 e0       	ldi	r18, 0x00	; 0
    1840:	3f ef       	ldi	r19, 0xFF	; 255
    1842:	4f e7       	ldi	r20, 0x7F	; 127
    1844:	57 e4       	ldi	r21, 0x47	; 71
    1846:	6b 89       	ldd	r22, Y+19	; 0x13
    1848:	7c 89       	ldd	r23, Y+20	; 0x14
    184a:	8d 89       	ldd	r24, Y+21	; 0x15
    184c:	9e 89       	ldd	r25, Y+22	; 0x16
    184e:	0e 94 09 10 	call	0x2012	; 0x2012 <__gesf2>
    1852:	18 16       	cp	r1, r24
    1854:	4c f5       	brge	.+82     	; 0x18a8 <nokia_lcd_init+0x152>
    1856:	20 e0       	ldi	r18, 0x00	; 0
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	40 e2       	ldi	r20, 0x20	; 32
    185c:	51 e4       	ldi	r21, 0x41	; 65
    185e:	69 81       	ldd	r22, Y+1	; 0x01
    1860:	7a 81       	ldd	r23, Y+2	; 0x02
    1862:	8b 81       	ldd	r24, Y+3	; 0x03
    1864:	9c 81       	ldd	r25, Y+4	; 0x04
    1866:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
    186a:	dc 01       	movw	r26, r24
    186c:	cb 01       	movw	r24, r22
    186e:	bc 01       	movw	r22, r24
    1870:	cd 01       	movw	r24, r26
    1872:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
    1876:	dc 01       	movw	r26, r24
    1878:	cb 01       	movw	r24, r22
    187a:	98 8f       	std	Y+24, r25	; 0x18
    187c:	8f 8b       	std	Y+23, r24	; 0x17
    187e:	0f c0       	rjmp	.+30     	; 0x189e <nokia_lcd_init+0x148>
    1880:	89 e1       	ldi	r24, 0x19	; 25
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	9a 8f       	std	Y+26, r25	; 0x1a
    1886:	89 8f       	std	Y+25, r24	; 0x19
    1888:	89 8d       	ldd	r24, Y+25	; 0x19
    188a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    188c:	01 97       	sbiw	r24, 0x01	; 1
    188e:	f1 f7       	brne	.-4      	; 0x188c <nokia_lcd_init+0x136>
    1890:	9a 8f       	std	Y+26, r25	; 0x1a
    1892:	89 8f       	std	Y+25, r24	; 0x19
    1894:	8f 89       	ldd	r24, Y+23	; 0x17
    1896:	98 8d       	ldd	r25, Y+24	; 0x18
    1898:	01 97       	sbiw	r24, 0x01	; 1
    189a:	98 8f       	std	Y+24, r25	; 0x18
    189c:	8f 8b       	std	Y+23, r24	; 0x17
    189e:	8f 89       	ldd	r24, Y+23	; 0x17
    18a0:	98 8d       	ldd	r25, Y+24	; 0x18
    18a2:	89 2b       	or	r24, r25
    18a4:	69 f7       	brne	.-38     	; 0x1880 <nokia_lcd_init+0x12a>
    18a6:	14 c0       	rjmp	.+40     	; 0x18d0 <nokia_lcd_init+0x17a>
    18a8:	6b 89       	ldd	r22, Y+19	; 0x13
    18aa:	7c 89       	ldd	r23, Y+20	; 0x14
    18ac:	8d 89       	ldd	r24, Y+21	; 0x15
    18ae:	9e 89       	ldd	r25, Y+22	; 0x16
    18b0:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
    18b4:	dc 01       	movw	r26, r24
    18b6:	cb 01       	movw	r24, r22
    18b8:	98 8f       	std	Y+24, r25	; 0x18
    18ba:	8f 8b       	std	Y+23, r24	; 0x17
    18bc:	8f 89       	ldd	r24, Y+23	; 0x17
    18be:	98 8d       	ldd	r25, Y+24	; 0x18
    18c0:	9c 8f       	std	Y+28, r25	; 0x1c
    18c2:	8b 8f       	std	Y+27, r24	; 0x1b
    18c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18c8:	01 97       	sbiw	r24, 0x01	; 1
    18ca:	f1 f7       	brne	.-4      	; 0x18c8 <nokia_lcd_init+0x172>
    18cc:	9c 8f       	std	Y+28, r25	; 0x1c
    18ce:	8b 8f       	std	Y+27, r24	; 0x1b
    18d0:	88 e2       	ldi	r24, 0x28	; 40
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	28 e2       	ldi	r18, 0x28	; 40
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	f9 01       	movw	r30, r18
    18da:	20 81       	ld	r18, Z
    18dc:	2b 7f       	andi	r18, 0xFB	; 251
    18de:	fc 01       	movw	r30, r24
    18e0:	20 83       	st	Z, r18
    18e2:	80 e0       	ldi	r24, 0x00	; 0
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	ac e8       	ldi	r26, 0x8C	; 140
    18e8:	b2 e4       	ldi	r27, 0x42	; 66
    18ea:	8d 83       	std	Y+5, r24	; 0x05
    18ec:	9e 83       	std	Y+6, r25	; 0x06
    18ee:	af 83       	std	Y+7, r26	; 0x07
    18f0:	b8 87       	std	Y+8, r27	; 0x08
    18f2:	20 e0       	ldi	r18, 0x00	; 0
    18f4:	30 e0       	ldi	r19, 0x00	; 0
    18f6:	4a e7       	ldi	r20, 0x7A	; 122
    18f8:	53 e4       	ldi	r21, 0x43	; 67
    18fa:	6d 81       	ldd	r22, Y+5	; 0x05
    18fc:	7e 81       	ldd	r23, Y+6	; 0x06
    18fe:	8f 81       	ldd	r24, Y+7	; 0x07
    1900:	98 85       	ldd	r25, Y+8	; 0x08
    1902:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
    1906:	dc 01       	movw	r26, r24
    1908:	cb 01       	movw	r24, r22
    190a:	89 87       	std	Y+9, r24	; 0x09
    190c:	9a 87       	std	Y+10, r25	; 0x0a
    190e:	ab 87       	std	Y+11, r26	; 0x0b
    1910:	bc 87       	std	Y+12, r27	; 0x0c
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	40 e8       	ldi	r20, 0x80	; 128
    1918:	5f e3       	ldi	r21, 0x3F	; 63
    191a:	69 85       	ldd	r22, Y+9	; 0x09
    191c:	7a 85       	ldd	r23, Y+10	; 0x0a
    191e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1920:	9c 85       	ldd	r25, Y+12	; 0x0c
    1922:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <__cmpsf2>
    1926:	88 23       	and	r24, r24
    1928:	2c f4       	brge	.+10     	; 0x1934 <nokia_lcd_init+0x1de>
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	9e 87       	std	Y+14, r25	; 0x0e
    1930:	8d 87       	std	Y+13, r24	; 0x0d
    1932:	3f c0       	rjmp	.+126    	; 0x19b2 <nokia_lcd_init+0x25c>
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	3f ef       	ldi	r19, 0xFF	; 255
    1938:	4f e7       	ldi	r20, 0x7F	; 127
    193a:	57 e4       	ldi	r21, 0x47	; 71
    193c:	69 85       	ldd	r22, Y+9	; 0x09
    193e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1940:	8b 85       	ldd	r24, Y+11	; 0x0b
    1942:	9c 85       	ldd	r25, Y+12	; 0x0c
    1944:	0e 94 09 10 	call	0x2012	; 0x2012 <__gesf2>
    1948:	18 16       	cp	r1, r24
    194a:	4c f5       	brge	.+82     	; 0x199e <nokia_lcd_init+0x248>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e2       	ldi	r20, 0x20	; 32
    1952:	51 e4       	ldi	r21, 0x41	; 65
    1954:	6d 81       	ldd	r22, Y+5	; 0x05
    1956:	7e 81       	ldd	r23, Y+6	; 0x06
    1958:	8f 81       	ldd	r24, Y+7	; 0x07
    195a:	98 85       	ldd	r25, Y+8	; 0x08
    195c:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3>
    1960:	dc 01       	movw	r26, r24
    1962:	cb 01       	movw	r24, r22
    1964:	bc 01       	movw	r22, r24
    1966:	cd 01       	movw	r24, r26
    1968:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
    196c:	dc 01       	movw	r26, r24
    196e:	cb 01       	movw	r24, r22
    1970:	9e 87       	std	Y+14, r25	; 0x0e
    1972:	8d 87       	std	Y+13, r24	; 0x0d
    1974:	0f c0       	rjmp	.+30     	; 0x1994 <nokia_lcd_init+0x23e>
    1976:	89 e1       	ldi	r24, 0x19	; 25
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	98 8b       	std	Y+16, r25	; 0x10
    197c:	8f 87       	std	Y+15, r24	; 0x0f
    197e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1980:	98 89       	ldd	r25, Y+16	; 0x10
    1982:	01 97       	sbiw	r24, 0x01	; 1
    1984:	f1 f7       	brne	.-4      	; 0x1982 <nokia_lcd_init+0x22c>
    1986:	98 8b       	std	Y+16, r25	; 0x10
    1988:	8f 87       	std	Y+15, r24	; 0x0f
    198a:	8d 85       	ldd	r24, Y+13	; 0x0d
    198c:	9e 85       	ldd	r25, Y+14	; 0x0e
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	9e 87       	std	Y+14, r25	; 0x0e
    1992:	8d 87       	std	Y+13, r24	; 0x0d
    1994:	8d 85       	ldd	r24, Y+13	; 0x0d
    1996:	9e 85       	ldd	r25, Y+14	; 0x0e
    1998:	89 2b       	or	r24, r25
    199a:	69 f7       	brne	.-38     	; 0x1976 <nokia_lcd_init+0x220>
    199c:	14 c0       	rjmp	.+40     	; 0x19c6 <nokia_lcd_init+0x270>
    199e:	69 85       	ldd	r22, Y+9	; 0x09
    19a0:	7a 85       	ldd	r23, Y+10	; 0x0a
    19a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    19a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    19a6:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <__fixunssfsi>
    19aa:	dc 01       	movw	r26, r24
    19ac:	cb 01       	movw	r24, r22
    19ae:	9e 87       	std	Y+14, r25	; 0x0e
    19b0:	8d 87       	std	Y+13, r24	; 0x0d
    19b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    19b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    19b6:	9a 8b       	std	Y+18, r25	; 0x12
    19b8:	89 8b       	std	Y+17, r24	; 0x11
    19ba:	89 89       	ldd	r24, Y+17	; 0x11
    19bc:	9a 89       	ldd	r25, Y+18	; 0x12
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	f1 f7       	brne	.-4      	; 0x19be <nokia_lcd_init+0x268>
    19c2:	9a 8b       	std	Y+18, r25	; 0x12
    19c4:	89 8b       	std	Y+17, r24	; 0x11
    19c6:	88 e2       	ldi	r24, 0x28	; 40
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	28 e2       	ldi	r18, 0x28	; 40
    19cc:	30 e0       	ldi	r19, 0x00	; 0
    19ce:	f9 01       	movw	r30, r18
    19d0:	20 81       	ld	r18, Z
    19d2:	24 60       	ori	r18, 0x04	; 4
    19d4:	fc 01       	movw	r30, r24
    19d6:	20 83       	st	Z, r18
    19d8:	88 e2       	ldi	r24, 0x28	; 40
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	28 e2       	ldi	r18, 0x28	; 40
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	f9 01       	movw	r30, r18
    19e2:	20 81       	ld	r18, Z
    19e4:	2f 7b       	andi	r18, 0xBF	; 191
    19e6:	fc 01       	movw	r30, r24
    19e8:	20 83       	st	Z, r18
    19ea:	81 e2       	ldi	r24, 0x21	; 33
    19ec:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    19f0:	83 e1       	ldi	r24, 0x13	; 19
    19f2:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    19f6:	86 e0       	ldi	r24, 0x06	; 6
    19f8:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    19fc:	82 ec       	ldi	r24, 0xC2	; 194
    19fe:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a02:	80 e2       	ldi	r24, 0x20	; 32
    1a04:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a08:	89 e0       	ldi	r24, 0x09	; 9
    1a0a:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a0e:	80 e8       	ldi	r24, 0x80	; 128
    1a10:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a14:	80 e4       	ldi	r24, 0x40	; 64
    1a16:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a1a:	00 e0       	ldi	r16, 0x00	; 0
    1a1c:	10 e0       	ldi	r17, 0x00	; 0
    1a1e:	05 c0       	rjmp	.+10     	; 0x1a2a <nokia_lcd_init+0x2d4>
    1a20:	80 e0       	ldi	r24, 0x00	; 0
    1a22:	0e 94 9c 0b 	call	0x1738	; 0x1738 <write_data>
    1a26:	0f 5f       	subi	r16, 0xFF	; 255
    1a28:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2a:	08 3f       	cpi	r16, 0xF8	; 248
    1a2c:	f1 e0       	ldi	r31, 0x01	; 1
    1a2e:	1f 07       	cpc	r17, r31
    1a30:	b8 f3       	brcs	.-18     	; 0x1a20 <nokia_lcd_init+0x2ca>
    1a32:	88 e0       	ldi	r24, 0x08	; 8
    1a34:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a38:	8c e0       	ldi	r24, 0x0C	; 12
    1a3a:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a3e:	00 00       	nop
    1a40:	6c 96       	adiw	r28, 0x1c	; 28
    1a42:	0f b6       	in	r0, 0x3f	; 63
    1a44:	f8 94       	cli
    1a46:	de bf       	out	0x3e, r29	; 62
    1a48:	0f be       	out	0x3f, r0	; 63
    1a4a:	cd bf       	out	0x3d, r28	; 61
    1a4c:	df 91       	pop	r29
    1a4e:	cf 91       	pop	r28
    1a50:	1f 91       	pop	r17
    1a52:	0f 91       	pop	r16
    1a54:	08 95       	ret

00001a56 <nokia_lcd_clear>:
    1a56:	0f 93       	push	r16
    1a58:	1f 93       	push	r17
    1a5a:	cf 93       	push	r28
    1a5c:	df 93       	push	r29
    1a5e:	cd b7       	in	r28, 0x3d	; 61
    1a60:	de b7       	in	r29, 0x3e	; 62
    1a62:	80 e8       	ldi	r24, 0x80	; 128
    1a64:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a68:	80 e4       	ldi	r24, 0x40	; 64
    1a6a:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
    1a6e:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <nokia_lcd+0x1f8>
    1a72:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <nokia_lcd+0x1f9>
    1a76:	00 e0       	ldi	r16, 0x00	; 0
    1a78:	10 e0       	ldi	r17, 0x00	; 0
    1a7a:	07 c0       	rjmp	.+14     	; 0x1a8a <nokia_lcd_clear+0x34>
    1a7c:	c8 01       	movw	r24, r16
    1a7e:	8f 54       	subi	r24, 0x4F	; 79
    1a80:	9e 4f       	sbci	r25, 0xFE	; 254
    1a82:	fc 01       	movw	r30, r24
    1a84:	10 82       	st	Z, r1
    1a86:	0f 5f       	subi	r16, 0xFF	; 255
    1a88:	1f 4f       	sbci	r17, 0xFF	; 255
    1a8a:	08 3f       	cpi	r16, 0xF8	; 248
    1a8c:	f1 e0       	ldi	r31, 0x01	; 1
    1a8e:	1f 07       	cpc	r17, r31
    1a90:	a8 f3       	brcs	.-22     	; 0x1a7c <nokia_lcd_clear+0x26>
    1a92:	00 00       	nop
    1a94:	df 91       	pop	r29
    1a96:	cf 91       	pop	r28
    1a98:	1f 91       	pop	r17
    1a9a:	0f 91       	pop	r16
    1a9c:	08 95       	ret

00001a9e <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
    1a9e:	cf 93       	push	r28
    1aa0:	df 93       	push	r29
    1aa2:	00 d0       	rcall	.+0      	; 0x1aa4 <nokia_lcd_set_pixel+0x6>
    1aa4:	00 d0       	rcall	.+0      	; 0x1aa6 <nokia_lcd_set_pixel+0x8>
    1aa6:	1f 92       	push	r1
    1aa8:	cd b7       	in	r28, 0x3d	; 61
    1aaa:	de b7       	in	r29, 0x3e	; 62
    1aac:	8b 83       	std	Y+3, r24	; 0x03
    1aae:	6c 83       	std	Y+4, r22	; 0x04
    1ab0:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    1ab2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ab4:	86 95       	lsr	r24
    1ab6:	86 95       	lsr	r24
    1ab8:	86 95       	lsr	r24
    1aba:	88 2f       	mov	r24, r24
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	44 e5       	ldi	r20, 0x54	; 84
    1ac0:	48 9f       	mul	r20, r24
    1ac2:	90 01       	movw	r18, r0
    1ac4:	49 9f       	mul	r20, r25
    1ac6:	30 0d       	add	r19, r0
    1ac8:	11 24       	eor	r1, r1
    1aca:	8b 81       	ldd	r24, Y+3	; 0x03
    1acc:	88 2f       	mov	r24, r24
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	82 0f       	add	r24, r18
    1ad2:	93 1f       	adc	r25, r19
    1ad4:	8f 54       	subi	r24, 0x4F	; 79
    1ad6:	9e 4f       	sbci	r25, 0xFE	; 254
    1ad8:	9a 83       	std	Y+2, r25	; 0x02
    1ada:	89 83       	std	Y+1, r24	; 0x01
	if (value)
    1adc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ade:	88 23       	and	r24, r24
    1ae0:	c9 f0       	breq	.+50     	; 0x1b14 <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
    1ae2:	89 81       	ldd	r24, Y+1	; 0x01
    1ae4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	80 81       	ld	r24, Z
    1aea:	48 2f       	mov	r20, r24
    1aec:	8c 81       	ldd	r24, Y+4	; 0x04
    1aee:	88 2f       	mov	r24, r24
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	9c 01       	movw	r18, r24
    1af4:	27 70       	andi	r18, 0x07	; 7
    1af6:	33 27       	eor	r19, r19
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	02 c0       	rjmp	.+4      	; 0x1b02 <nokia_lcd_set_pixel+0x64>
    1afe:	88 0f       	add	r24, r24
    1b00:	99 1f       	adc	r25, r25
    1b02:	2a 95       	dec	r18
    1b04:	e2 f7       	brpl	.-8      	; 0x1afe <nokia_lcd_set_pixel+0x60>
    1b06:	84 2b       	or	r24, r20
    1b08:	28 2f       	mov	r18, r24
    1b0a:	89 81       	ldd	r24, Y+1	; 0x01
    1b0c:	9a 81       	ldd	r25, Y+2	; 0x02
    1b0e:	fc 01       	movw	r30, r24
    1b10:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
    1b12:	19 c0       	rjmp	.+50     	; 0x1b46 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
    1b14:	89 81       	ldd	r24, Y+1	; 0x01
    1b16:	9a 81       	ldd	r25, Y+2	; 0x02
    1b18:	fc 01       	movw	r30, r24
    1b1a:	80 81       	ld	r24, Z
    1b1c:	48 2f       	mov	r20, r24
    1b1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1b20:	88 2f       	mov	r24, r24
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	9c 01       	movw	r18, r24
    1b26:	27 70       	andi	r18, 0x07	; 7
    1b28:	33 27       	eor	r19, r19
    1b2a:	81 e0       	ldi	r24, 0x01	; 1
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <nokia_lcd_set_pixel+0x96>
    1b30:	88 0f       	add	r24, r24
    1b32:	99 1f       	adc	r25, r25
    1b34:	2a 95       	dec	r18
    1b36:	e2 f7       	brpl	.-8      	; 0x1b30 <nokia_lcd_set_pixel+0x92>
    1b38:	80 95       	com	r24
    1b3a:	84 23       	and	r24, r20
    1b3c:	28 2f       	mov	r18, r24
    1b3e:	89 81       	ldd	r24, Y+1	; 0x01
    1b40:	9a 81       	ldd	r25, Y+2	; 0x02
    1b42:	fc 01       	movw	r30, r24
    1b44:	20 83       	st	Z, r18
}
    1b46:	00 00       	nop
    1b48:	0f 90       	pop	r0
    1b4a:	0f 90       	pop	r0
    1b4c:	0f 90       	pop	r0
    1b4e:	0f 90       	pop	r0
    1b50:	0f 90       	pop	r0
    1b52:	df 91       	pop	r29
    1b54:	cf 91       	pop	r28
    1b56:	08 95       	ret

00001b58 <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
    1b58:	0f 93       	push	r16
    1b5a:	1f 93       	push	r17
    1b5c:	cf 93       	push	r28
    1b5e:	df 93       	push	r29
    1b60:	00 d0       	rcall	.+0      	; 0x1b62 <nokia_lcd_write_char+0xa>
    1b62:	00 d0       	rcall	.+0      	; 0x1b64 <nokia_lcd_write_char+0xc>
    1b64:	1f 92       	push	r1
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	8c 83       	std	Y+4, r24	; 0x04
    1b6c:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1b6e:	10 e0       	ldi	r17, 0x00	; 0
    1b70:	65 c0       	rjmp	.+202    	; 0x1c3c <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
    1b72:	00 e0       	ldi	r16, 0x00	; 0
    1b74:	4e c0       	rjmp	.+156    	; 0x1c12 <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1b76:	8c 81       	ldd	r24, Y+4	; 0x04
    1b78:	88 2f       	mov	r24, r24
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	9c 01       	movw	r18, r24
    1b7e:	20 52       	subi	r18, 0x20	; 32
    1b80:	31 09       	sbc	r19, r1
    1b82:	9d 81       	ldd	r25, Y+5	; 0x05
    1b84:	81 2f       	mov	r24, r17
    1b86:	69 2f       	mov	r22, r25
    1b88:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <__udivmodqi4>
    1b8c:	48 2f       	mov	r20, r24
    1b8e:	50 e0       	ldi	r21, 0x00	; 0
    1b90:	c9 01       	movw	r24, r18
    1b92:	88 0f       	add	r24, r24
    1b94:	99 1f       	adc	r25, r25
    1b96:	88 0f       	add	r24, r24
    1b98:	99 1f       	adc	r25, r25
    1b9a:	82 0f       	add	r24, r18
    1b9c:	93 1f       	adc	r25, r19
    1b9e:	84 0f       	add	r24, r20
    1ba0:	95 1f       	adc	r25, r21
    1ba2:	88 59       	subi	r24, 0x98	; 152
    1ba4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba6:	9a 83       	std	Y+2, r25	; 0x02
    1ba8:	89 83       	std	Y+1, r24	; 0x01
    1baa:	89 81       	ldd	r24, Y+1	; 0x01
    1bac:	9a 81       	ldd	r25, Y+2	; 0x02
    1bae:	fc 01       	movw	r30, r24
    1bb0:	84 91       	lpm	r24, Z
    1bb2:	8b 83       	std	Y+3, r24	; 0x03
    1bb4:	8b 81       	ldd	r24, Y+3	; 0x03
    1bb6:	28 2f       	mov	r18, r24
    1bb8:	30 e0       	ldi	r19, 0x00	; 0
    1bba:	9d 81       	ldd	r25, Y+5	; 0x05
    1bbc:	80 2f       	mov	r24, r16
    1bbe:	69 2f       	mov	r22, r25
    1bc0:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <__udivmodqi4>
    1bc4:	88 2f       	mov	r24, r24
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	a9 01       	movw	r20, r18
    1bca:	02 c0       	rjmp	.+4      	; 0x1bd0 <nokia_lcd_write_char+0x78>
    1bcc:	55 95       	asr	r21
    1bce:	47 95       	ror	r20
    1bd0:	8a 95       	dec	r24
    1bd2:	e2 f7       	brpl	.-8      	; 0x1bcc <nokia_lcd_write_char+0x74>
    1bd4:	ca 01       	movw	r24, r20
    1bd6:	81 70       	andi	r24, 0x01	; 1
    1bd8:	99 27       	eor	r25, r25
    1bda:	89 2b       	or	r24, r25
    1bdc:	61 f0       	breq	.+24     	; 0x1bf6 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1bde:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <nokia_lcd+0x1f9>
    1be2:	98 2f       	mov	r25, r24
    1be4:	90 0f       	add	r25, r16
    1be6:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <nokia_lcd+0x1f8>
    1bea:	81 0f       	add	r24, r17
    1bec:	41 e0       	ldi	r20, 0x01	; 1
    1bee:	69 2f       	mov	r22, r25
    1bf0:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <nokia_lcd_set_pixel>
    1bf4:	0b c0       	rjmp	.+22     	; 0x1c0c <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1bf6:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <nokia_lcd+0x1f9>
    1bfa:	98 2f       	mov	r25, r24
    1bfc:	90 0f       	add	r25, r16
    1bfe:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <nokia_lcd+0x1f8>
    1c02:	81 0f       	add	r24, r17
    1c04:	40 e0       	ldi	r20, 0x00	; 0
    1c06:	69 2f       	mov	r22, r25
    1c08:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1c0c:	80 2f       	mov	r24, r16
    1c0e:	01 e0       	ldi	r16, 0x01	; 1
    1c10:	08 0f       	add	r16, r24
    1c12:	40 2f       	mov	r20, r16
    1c14:	50 e0       	ldi	r21, 0x00	; 0
    1c16:	8d 81       	ldd	r24, Y+5	; 0x05
    1c18:	28 2f       	mov	r18, r24
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	c9 01       	movw	r24, r18
    1c1e:	88 0f       	add	r24, r24
    1c20:	99 1f       	adc	r25, r25
    1c22:	88 0f       	add	r24, r24
    1c24:	99 1f       	adc	r25, r25
    1c26:	88 0f       	add	r24, r24
    1c28:	99 1f       	adc	r25, r25
    1c2a:	82 1b       	sub	r24, r18
    1c2c:	93 0b       	sbc	r25, r19
    1c2e:	48 17       	cp	r20, r24
    1c30:	59 07       	cpc	r21, r25
    1c32:	0c f4       	brge	.+2      	; 0x1c36 <nokia_lcd_write_char+0xde>
    1c34:	a0 cf       	rjmp	.-192    	; 0x1b76 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1c36:	81 2f       	mov	r24, r17
    1c38:	11 e0       	ldi	r17, 0x01	; 1
    1c3a:	18 0f       	add	r17, r24
    1c3c:	41 2f       	mov	r20, r17
    1c3e:	50 e0       	ldi	r21, 0x00	; 0
    1c40:	8d 81       	ldd	r24, Y+5	; 0x05
    1c42:	28 2f       	mov	r18, r24
    1c44:	30 e0       	ldi	r19, 0x00	; 0
    1c46:	c9 01       	movw	r24, r18
    1c48:	88 0f       	add	r24, r24
    1c4a:	99 1f       	adc	r25, r25
    1c4c:	88 0f       	add	r24, r24
    1c4e:	99 1f       	adc	r25, r25
    1c50:	82 0f       	add	r24, r18
    1c52:	93 1f       	adc	r25, r19
    1c54:	48 17       	cp	r20, r24
    1c56:	59 07       	cpc	r21, r25
    1c58:	0c f4       	brge	.+2      	; 0x1c5c <nokia_lcd_write_char+0x104>
    1c5a:	8b cf       	rjmp	.-234    	; 0x1b72 <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1c5c:	20 91 a9 03 	lds	r18, 0x03A9	; 0x8003a9 <nokia_lcd+0x1f8>
    1c60:	9d 81       	ldd	r25, Y+5	; 0x05
    1c62:	89 2f       	mov	r24, r25
    1c64:	88 0f       	add	r24, r24
    1c66:	88 0f       	add	r24, r24
    1c68:	89 0f       	add	r24, r25
    1c6a:	82 0f       	add	r24, r18
    1c6c:	8f 5f       	subi	r24, 0xFF	; 255
    1c6e:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
    1c72:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <nokia_lcd+0x1f8>
    1c76:	84 35       	cpi	r24, 0x54	; 84
    1c78:	70 f0       	brcs	.+28     	; 0x1c96 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
    1c7a:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1c7e:	20 91 aa 03 	lds	r18, 0x03AA	; 0x8003aa <nokia_lcd+0x1f9>
    1c82:	9d 81       	ldd	r25, Y+5	; 0x05
    1c84:	89 2f       	mov	r24, r25
    1c86:	88 0f       	add	r24, r24
    1c88:	88 0f       	add	r24, r24
    1c8a:	88 0f       	add	r24, r24
    1c8c:	89 1b       	sub	r24, r25
    1c8e:	82 0f       	add	r24, r18
    1c90:	8f 5f       	subi	r24, 0xFF	; 255
    1c92:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
    1c96:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <nokia_lcd+0x1f9>
    1c9a:	80 33       	cpi	r24, 0x30	; 48
    1c9c:	20 f0       	brcs	.+8      	; 0x1ca6 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
    1c9e:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1ca2:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <nokia_lcd+0x1f9>
	}
}
    1ca6:	00 00       	nop
    1ca8:	0f 90       	pop	r0
    1caa:	0f 90       	pop	r0
    1cac:	0f 90       	pop	r0
    1cae:	0f 90       	pop	r0
    1cb0:	0f 90       	pop	r0
    1cb2:	df 91       	pop	r29
    1cb4:	cf 91       	pop	r28
    1cb6:	1f 91       	pop	r17
    1cb8:	0f 91       	pop	r16
    1cba:	08 95       	ret

00001cbc <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1cbc:	cf 93       	push	r28
    1cbe:	df 93       	push	r29
    1cc0:	00 d0       	rcall	.+0      	; 0x1cc2 <nokia_lcd_write_string+0x6>
    1cc2:	1f 92       	push	r1
    1cc4:	cd b7       	in	r28, 0x3d	; 61
    1cc6:	de b7       	in	r29, 0x3e	; 62
    1cc8:	9a 83       	std	Y+2, r25	; 0x02
    1cca:	89 83       	std	Y+1, r24	; 0x01
    1ccc:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
    1cce:	0c c0       	rjmp	.+24     	; 0x1ce8 <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
    1cd0:	89 81       	ldd	r24, Y+1	; 0x01
    1cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    1cd4:	9c 01       	movw	r18, r24
    1cd6:	2f 5f       	subi	r18, 0xFF	; 255
    1cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cda:	3a 83       	std	Y+2, r19	; 0x02
    1cdc:	29 83       	std	Y+1, r18	; 0x01
    1cde:	fc 01       	movw	r30, r24
    1ce0:	80 81       	ld	r24, Z
    1ce2:	6b 81       	ldd	r22, Y+3	; 0x03
    1ce4:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    1ce8:	89 81       	ldd	r24, Y+1	; 0x01
    1cea:	9a 81       	ldd	r25, Y+2	; 0x02
    1cec:	fc 01       	movw	r30, r24
    1cee:	80 81       	ld	r24, Z
    1cf0:	88 23       	and	r24, r24
    1cf2:	71 f7       	brne	.-36     	; 0x1cd0 <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
    1cf4:	00 00       	nop
    1cf6:	0f 90       	pop	r0
    1cf8:	0f 90       	pop	r0
    1cfa:	0f 90       	pop	r0
    1cfc:	df 91       	pop	r29
    1cfe:	cf 91       	pop	r28
    1d00:	08 95       	ret

00001d02 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    1d02:	cf 93       	push	r28
    1d04:	df 93       	push	r29
    1d06:	00 d0       	rcall	.+0      	; 0x1d08 <nokia_lcd_set_cursor+0x6>
    1d08:	cd b7       	in	r28, 0x3d	; 61
    1d0a:	de b7       	in	r29, 0x3e	; 62
    1d0c:	89 83       	std	Y+1, r24	; 0x01
    1d0e:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
    1d10:	89 81       	ldd	r24, Y+1	; 0x01
    1d12:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    1d16:	8a 81       	ldd	r24, Y+2	; 0x02
    1d18:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <nokia_lcd+0x1f9>
}
    1d1c:	00 00       	nop
    1d1e:	0f 90       	pop	r0
    1d20:	0f 90       	pop	r0
    1d22:	df 91       	pop	r29
    1d24:	cf 91       	pop	r28
    1d26:	08 95       	ret

00001d28 <nokia_lcd_render>:

void nokia_lcd_render(void)
{
    1d28:	0f 93       	push	r16
    1d2a:	1f 93       	push	r17
    1d2c:	cf 93       	push	r28
    1d2e:	df 93       	push	r29
    1d30:	cd b7       	in	r28, 0x3d	; 61
    1d32:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1d34:	80 e8       	ldi	r24, 0x80	; 128
    1d36:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>
	write_cmd(0x40);
    1d3a:	80 e4       	ldi	r24, 0x40	; 64
    1d3c:	0e 94 8d 0b 	call	0x171a	; 0x171a <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1d40:	00 e0       	ldi	r16, 0x00	; 0
    1d42:	10 e0       	ldi	r17, 0x00	; 0
    1d44:	09 c0       	rjmp	.+18     	; 0x1d58 <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
    1d46:	c8 01       	movw	r24, r16
    1d48:	8f 54       	subi	r24, 0x4F	; 79
    1d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d4c:	fc 01       	movw	r30, r24
    1d4e:	80 81       	ld	r24, Z
    1d50:	0e 94 9c 0b 	call	0x1738	; 0x1738 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1d54:	0f 5f       	subi	r16, 0xFF	; 255
    1d56:	1f 4f       	sbci	r17, 0xFF	; 255
    1d58:	08 3f       	cpi	r16, 0xF8	; 248
    1d5a:	f1 e0       	ldi	r31, 0x01	; 1
    1d5c:	1f 07       	cpc	r17, r31
    1d5e:	98 f3       	brcs	.-26     	; 0x1d46 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
    1d60:	00 00       	nop
    1d62:	df 91       	pop	r29
    1d64:	cf 91       	pop	r28
    1d66:	1f 91       	pop	r17
    1d68:	0f 91       	pop	r16
    1d6a:	08 95       	ret

00001d6c <__subsf3>:
    1d6c:	50 58       	subi	r21, 0x80	; 128

00001d6e <__addsf3>:
    1d6e:	bb 27       	eor	r27, r27
    1d70:	aa 27       	eor	r26, r26
    1d72:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <__addsf3x>
    1d76:	0c 94 cf 0f 	jmp	0x1f9e	; 0x1f9e <__fp_round>
    1d7a:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <__fp_pscA>
    1d7e:	38 f0       	brcs	.+14     	; 0x1d8e <__addsf3+0x20>
    1d80:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__fp_pscB>
    1d84:	20 f0       	brcs	.+8      	; 0x1d8e <__addsf3+0x20>
    1d86:	39 f4       	brne	.+14     	; 0x1d96 <__addsf3+0x28>
    1d88:	9f 3f       	cpi	r25, 0xFF	; 255
    1d8a:	19 f4       	brne	.+6      	; 0x1d92 <__addsf3+0x24>
    1d8c:	26 f4       	brtc	.+8      	; 0x1d96 <__addsf3+0x28>
    1d8e:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_nan>
    1d92:	0e f4       	brtc	.+2      	; 0x1d96 <__addsf3+0x28>
    1d94:	e0 95       	com	r30
    1d96:	e7 fb       	bst	r30, 7
    1d98:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_inf>

00001d9c <__addsf3x>:
    1d9c:	e9 2f       	mov	r30, r25
    1d9e:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__fp_split3>
    1da2:	58 f3       	brcs	.-42     	; 0x1d7a <__addsf3+0xc>
    1da4:	ba 17       	cp	r27, r26
    1da6:	62 07       	cpc	r22, r18
    1da8:	73 07       	cpc	r23, r19
    1daa:	84 07       	cpc	r24, r20
    1dac:	95 07       	cpc	r25, r21
    1dae:	20 f0       	brcs	.+8      	; 0x1db8 <__addsf3x+0x1c>
    1db0:	79 f4       	brne	.+30     	; 0x1dd0 <__addsf3x+0x34>
    1db2:	a6 f5       	brtc	.+104    	; 0x1e1c <__addsf3x+0x80>
    1db4:	0c 94 02 10 	jmp	0x2004	; 0x2004 <__fp_zero>
    1db8:	0e f4       	brtc	.+2      	; 0x1dbc <__addsf3x+0x20>
    1dba:	e0 95       	com	r30
    1dbc:	0b 2e       	mov	r0, r27
    1dbe:	ba 2f       	mov	r27, r26
    1dc0:	a0 2d       	mov	r26, r0
    1dc2:	0b 01       	movw	r0, r22
    1dc4:	b9 01       	movw	r22, r18
    1dc6:	90 01       	movw	r18, r0
    1dc8:	0c 01       	movw	r0, r24
    1dca:	ca 01       	movw	r24, r20
    1dcc:	a0 01       	movw	r20, r0
    1dce:	11 24       	eor	r1, r1
    1dd0:	ff 27       	eor	r31, r31
    1dd2:	59 1b       	sub	r21, r25
    1dd4:	99 f0       	breq	.+38     	; 0x1dfc <__addsf3x+0x60>
    1dd6:	59 3f       	cpi	r21, 0xF9	; 249
    1dd8:	50 f4       	brcc	.+20     	; 0x1dee <__addsf3x+0x52>
    1dda:	50 3e       	cpi	r21, 0xE0	; 224
    1ddc:	68 f1       	brcs	.+90     	; 0x1e38 <__addsf3x+0x9c>
    1dde:	1a 16       	cp	r1, r26
    1de0:	f0 40       	sbci	r31, 0x00	; 0
    1de2:	a2 2f       	mov	r26, r18
    1de4:	23 2f       	mov	r18, r19
    1de6:	34 2f       	mov	r19, r20
    1de8:	44 27       	eor	r20, r20
    1dea:	58 5f       	subi	r21, 0xF8	; 248
    1dec:	f3 cf       	rjmp	.-26     	; 0x1dd4 <__addsf3x+0x38>
    1dee:	46 95       	lsr	r20
    1df0:	37 95       	ror	r19
    1df2:	27 95       	ror	r18
    1df4:	a7 95       	ror	r26
    1df6:	f0 40       	sbci	r31, 0x00	; 0
    1df8:	53 95       	inc	r21
    1dfa:	c9 f7       	brne	.-14     	; 0x1dee <__addsf3x+0x52>
    1dfc:	7e f4       	brtc	.+30     	; 0x1e1c <__addsf3x+0x80>
    1dfe:	1f 16       	cp	r1, r31
    1e00:	ba 0b       	sbc	r27, r26
    1e02:	62 0b       	sbc	r22, r18
    1e04:	73 0b       	sbc	r23, r19
    1e06:	84 0b       	sbc	r24, r20
    1e08:	ba f0       	brmi	.+46     	; 0x1e38 <__addsf3x+0x9c>
    1e0a:	91 50       	subi	r25, 0x01	; 1
    1e0c:	a1 f0       	breq	.+40     	; 0x1e36 <__addsf3x+0x9a>
    1e0e:	ff 0f       	add	r31, r31
    1e10:	bb 1f       	adc	r27, r27
    1e12:	66 1f       	adc	r22, r22
    1e14:	77 1f       	adc	r23, r23
    1e16:	88 1f       	adc	r24, r24
    1e18:	c2 f7       	brpl	.-16     	; 0x1e0a <__addsf3x+0x6e>
    1e1a:	0e c0       	rjmp	.+28     	; 0x1e38 <__addsf3x+0x9c>
    1e1c:	ba 0f       	add	r27, r26
    1e1e:	62 1f       	adc	r22, r18
    1e20:	73 1f       	adc	r23, r19
    1e22:	84 1f       	adc	r24, r20
    1e24:	48 f4       	brcc	.+18     	; 0x1e38 <__addsf3x+0x9c>
    1e26:	87 95       	ror	r24
    1e28:	77 95       	ror	r23
    1e2a:	67 95       	ror	r22
    1e2c:	b7 95       	ror	r27
    1e2e:	f7 95       	ror	r31
    1e30:	9e 3f       	cpi	r25, 0xFE	; 254
    1e32:	08 f0       	brcs	.+2      	; 0x1e36 <__addsf3x+0x9a>
    1e34:	b0 cf       	rjmp	.-160    	; 0x1d96 <__addsf3+0x28>
    1e36:	93 95       	inc	r25
    1e38:	88 0f       	add	r24, r24
    1e3a:	08 f0       	brcs	.+2      	; 0x1e3e <__addsf3x+0xa2>
    1e3c:	99 27       	eor	r25, r25
    1e3e:	ee 0f       	add	r30, r30
    1e40:	97 95       	ror	r25
    1e42:	87 95       	ror	r24
    1e44:	08 95       	ret

00001e46 <__cmpsf2>:
    1e46:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__fp_cmp>
    1e4a:	08 f4       	brcc	.+2      	; 0x1e4e <__cmpsf2+0x8>
    1e4c:	81 e0       	ldi	r24, 0x01	; 1
    1e4e:	08 95       	ret

00001e50 <__fixunssfsi>:
    1e50:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <__fp_splitA>
    1e54:	88 f0       	brcs	.+34     	; 0x1e78 <__fixunssfsi+0x28>
    1e56:	9f 57       	subi	r25, 0x7F	; 127
    1e58:	98 f0       	brcs	.+38     	; 0x1e80 <__fixunssfsi+0x30>
    1e5a:	b9 2f       	mov	r27, r25
    1e5c:	99 27       	eor	r25, r25
    1e5e:	b7 51       	subi	r27, 0x17	; 23
    1e60:	b0 f0       	brcs	.+44     	; 0x1e8e <__fixunssfsi+0x3e>
    1e62:	e1 f0       	breq	.+56     	; 0x1e9c <__fixunssfsi+0x4c>
    1e64:	66 0f       	add	r22, r22
    1e66:	77 1f       	adc	r23, r23
    1e68:	88 1f       	adc	r24, r24
    1e6a:	99 1f       	adc	r25, r25
    1e6c:	1a f0       	brmi	.+6      	; 0x1e74 <__fixunssfsi+0x24>
    1e6e:	ba 95       	dec	r27
    1e70:	c9 f7       	brne	.-14     	; 0x1e64 <__fixunssfsi+0x14>
    1e72:	14 c0       	rjmp	.+40     	; 0x1e9c <__fixunssfsi+0x4c>
    1e74:	b1 30       	cpi	r27, 0x01	; 1
    1e76:	91 f0       	breq	.+36     	; 0x1e9c <__fixunssfsi+0x4c>
    1e78:	0e 94 02 10 	call	0x2004	; 0x2004 <__fp_zero>
    1e7c:	b1 e0       	ldi	r27, 0x01	; 1
    1e7e:	08 95       	ret
    1e80:	0c 94 02 10 	jmp	0x2004	; 0x2004 <__fp_zero>
    1e84:	67 2f       	mov	r22, r23
    1e86:	78 2f       	mov	r23, r24
    1e88:	88 27       	eor	r24, r24
    1e8a:	b8 5f       	subi	r27, 0xF8	; 248
    1e8c:	39 f0       	breq	.+14     	; 0x1e9c <__fixunssfsi+0x4c>
    1e8e:	b9 3f       	cpi	r27, 0xF9	; 249
    1e90:	cc f3       	brlt	.-14     	; 0x1e84 <__fixunssfsi+0x34>
    1e92:	86 95       	lsr	r24
    1e94:	77 95       	ror	r23
    1e96:	67 95       	ror	r22
    1e98:	b3 95       	inc	r27
    1e9a:	d9 f7       	brne	.-10     	; 0x1e92 <__fixunssfsi+0x42>
    1e9c:	3e f4       	brtc	.+14     	; 0x1eac <__fixunssfsi+0x5c>
    1e9e:	90 95       	com	r25
    1ea0:	80 95       	com	r24
    1ea2:	70 95       	com	r23
    1ea4:	61 95       	neg	r22
    1ea6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ea8:	8f 4f       	sbci	r24, 0xFF	; 255
    1eaa:	9f 4f       	sbci	r25, 0xFF	; 255
    1eac:	08 95       	ret

00001eae <__floatunsisf>:
    1eae:	e8 94       	clt
    1eb0:	09 c0       	rjmp	.+18     	; 0x1ec4 <__floatsisf+0x12>

00001eb2 <__floatsisf>:
    1eb2:	97 fb       	bst	r25, 7
    1eb4:	3e f4       	brtc	.+14     	; 0x1ec4 <__floatsisf+0x12>
    1eb6:	90 95       	com	r25
    1eb8:	80 95       	com	r24
    1eba:	70 95       	com	r23
    1ebc:	61 95       	neg	r22
    1ebe:	7f 4f       	sbci	r23, 0xFF	; 255
    1ec0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ec2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec4:	99 23       	and	r25, r25
    1ec6:	a9 f0       	breq	.+42     	; 0x1ef2 <__floatsisf+0x40>
    1ec8:	f9 2f       	mov	r31, r25
    1eca:	96 e9       	ldi	r25, 0x96	; 150
    1ecc:	bb 27       	eor	r27, r27
    1ece:	93 95       	inc	r25
    1ed0:	f6 95       	lsr	r31
    1ed2:	87 95       	ror	r24
    1ed4:	77 95       	ror	r23
    1ed6:	67 95       	ror	r22
    1ed8:	b7 95       	ror	r27
    1eda:	f1 11       	cpse	r31, r1
    1edc:	f8 cf       	rjmp	.-16     	; 0x1ece <__floatsisf+0x1c>
    1ede:	fa f4       	brpl	.+62     	; 0x1f1e <__floatsisf+0x6c>
    1ee0:	bb 0f       	add	r27, r27
    1ee2:	11 f4       	brne	.+4      	; 0x1ee8 <__floatsisf+0x36>
    1ee4:	60 ff       	sbrs	r22, 0
    1ee6:	1b c0       	rjmp	.+54     	; 0x1f1e <__floatsisf+0x6c>
    1ee8:	6f 5f       	subi	r22, 0xFF	; 255
    1eea:	7f 4f       	sbci	r23, 0xFF	; 255
    1eec:	8f 4f       	sbci	r24, 0xFF	; 255
    1eee:	9f 4f       	sbci	r25, 0xFF	; 255
    1ef0:	16 c0       	rjmp	.+44     	; 0x1f1e <__floatsisf+0x6c>
    1ef2:	88 23       	and	r24, r24
    1ef4:	11 f0       	breq	.+4      	; 0x1efa <__floatsisf+0x48>
    1ef6:	96 e9       	ldi	r25, 0x96	; 150
    1ef8:	11 c0       	rjmp	.+34     	; 0x1f1c <__floatsisf+0x6a>
    1efa:	77 23       	and	r23, r23
    1efc:	21 f0       	breq	.+8      	; 0x1f06 <__floatsisf+0x54>
    1efe:	9e e8       	ldi	r25, 0x8E	; 142
    1f00:	87 2f       	mov	r24, r23
    1f02:	76 2f       	mov	r23, r22
    1f04:	05 c0       	rjmp	.+10     	; 0x1f10 <__floatsisf+0x5e>
    1f06:	66 23       	and	r22, r22
    1f08:	71 f0       	breq	.+28     	; 0x1f26 <__floatsisf+0x74>
    1f0a:	96 e8       	ldi	r25, 0x86	; 134
    1f0c:	86 2f       	mov	r24, r22
    1f0e:	70 e0       	ldi	r23, 0x00	; 0
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	2a f0       	brmi	.+10     	; 0x1f1e <__floatsisf+0x6c>
    1f14:	9a 95       	dec	r25
    1f16:	66 0f       	add	r22, r22
    1f18:	77 1f       	adc	r23, r23
    1f1a:	88 1f       	adc	r24, r24
    1f1c:	da f7       	brpl	.-10     	; 0x1f14 <__floatsisf+0x62>
    1f1e:	88 0f       	add	r24, r24
    1f20:	96 95       	lsr	r25
    1f22:	87 95       	ror	r24
    1f24:	97 f9       	bld	r25, 7
    1f26:	08 95       	ret

00001f28 <__fp_cmp>:
    1f28:	99 0f       	add	r25, r25
    1f2a:	00 08       	sbc	r0, r0
    1f2c:	55 0f       	add	r21, r21
    1f2e:	aa 0b       	sbc	r26, r26
    1f30:	e0 e8       	ldi	r30, 0x80	; 128
    1f32:	fe ef       	ldi	r31, 0xFE	; 254
    1f34:	16 16       	cp	r1, r22
    1f36:	17 06       	cpc	r1, r23
    1f38:	e8 07       	cpc	r30, r24
    1f3a:	f9 07       	cpc	r31, r25
    1f3c:	c0 f0       	brcs	.+48     	; 0x1f6e <__fp_cmp+0x46>
    1f3e:	12 16       	cp	r1, r18
    1f40:	13 06       	cpc	r1, r19
    1f42:	e4 07       	cpc	r30, r20
    1f44:	f5 07       	cpc	r31, r21
    1f46:	98 f0       	brcs	.+38     	; 0x1f6e <__fp_cmp+0x46>
    1f48:	62 1b       	sub	r22, r18
    1f4a:	73 0b       	sbc	r23, r19
    1f4c:	84 0b       	sbc	r24, r20
    1f4e:	95 0b       	sbc	r25, r21
    1f50:	39 f4       	brne	.+14     	; 0x1f60 <__fp_cmp+0x38>
    1f52:	0a 26       	eor	r0, r26
    1f54:	61 f0       	breq	.+24     	; 0x1f6e <__fp_cmp+0x46>
    1f56:	23 2b       	or	r18, r19
    1f58:	24 2b       	or	r18, r20
    1f5a:	25 2b       	or	r18, r21
    1f5c:	21 f4       	brne	.+8      	; 0x1f66 <__fp_cmp+0x3e>
    1f5e:	08 95       	ret
    1f60:	0a 26       	eor	r0, r26
    1f62:	09 f4       	brne	.+2      	; 0x1f66 <__fp_cmp+0x3e>
    1f64:	a1 40       	sbci	r26, 0x01	; 1
    1f66:	a6 95       	lsr	r26
    1f68:	8f ef       	ldi	r24, 0xFF	; 255
    1f6a:	81 1d       	adc	r24, r1
    1f6c:	81 1d       	adc	r24, r1
    1f6e:	08 95       	ret

00001f70 <__fp_inf>:
    1f70:	97 f9       	bld	r25, 7
    1f72:	9f 67       	ori	r25, 0x7F	; 127
    1f74:	80 e8       	ldi	r24, 0x80	; 128
    1f76:	70 e0       	ldi	r23, 0x00	; 0
    1f78:	60 e0       	ldi	r22, 0x00	; 0
    1f7a:	08 95       	ret

00001f7c <__fp_nan>:
    1f7c:	9f ef       	ldi	r25, 0xFF	; 255
    1f7e:	80 ec       	ldi	r24, 0xC0	; 192
    1f80:	08 95       	ret

00001f82 <__fp_pscA>:
    1f82:	00 24       	eor	r0, r0
    1f84:	0a 94       	dec	r0
    1f86:	16 16       	cp	r1, r22
    1f88:	17 06       	cpc	r1, r23
    1f8a:	18 06       	cpc	r1, r24
    1f8c:	09 06       	cpc	r0, r25
    1f8e:	08 95       	ret

00001f90 <__fp_pscB>:
    1f90:	00 24       	eor	r0, r0
    1f92:	0a 94       	dec	r0
    1f94:	12 16       	cp	r1, r18
    1f96:	13 06       	cpc	r1, r19
    1f98:	14 06       	cpc	r1, r20
    1f9a:	05 06       	cpc	r0, r21
    1f9c:	08 95       	ret

00001f9e <__fp_round>:
    1f9e:	09 2e       	mov	r0, r25
    1fa0:	03 94       	inc	r0
    1fa2:	00 0c       	add	r0, r0
    1fa4:	11 f4       	brne	.+4      	; 0x1faa <__fp_round+0xc>
    1fa6:	88 23       	and	r24, r24
    1fa8:	52 f0       	brmi	.+20     	; 0x1fbe <__fp_round+0x20>
    1faa:	bb 0f       	add	r27, r27
    1fac:	40 f4       	brcc	.+16     	; 0x1fbe <__fp_round+0x20>
    1fae:	bf 2b       	or	r27, r31
    1fb0:	11 f4       	brne	.+4      	; 0x1fb6 <__fp_round+0x18>
    1fb2:	60 ff       	sbrs	r22, 0
    1fb4:	04 c0       	rjmp	.+8      	; 0x1fbe <__fp_round+0x20>
    1fb6:	6f 5f       	subi	r22, 0xFF	; 255
    1fb8:	7f 4f       	sbci	r23, 0xFF	; 255
    1fba:	8f 4f       	sbci	r24, 0xFF	; 255
    1fbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1fbe:	08 95       	ret

00001fc0 <__fp_split3>:
    1fc0:	57 fd       	sbrc	r21, 7
    1fc2:	90 58       	subi	r25, 0x80	; 128
    1fc4:	44 0f       	add	r20, r20
    1fc6:	55 1f       	adc	r21, r21
    1fc8:	59 f0       	breq	.+22     	; 0x1fe0 <__fp_splitA+0x10>
    1fca:	5f 3f       	cpi	r21, 0xFF	; 255
    1fcc:	71 f0       	breq	.+28     	; 0x1fea <__fp_splitA+0x1a>
    1fce:	47 95       	ror	r20

00001fd0 <__fp_splitA>:
    1fd0:	88 0f       	add	r24, r24
    1fd2:	97 fb       	bst	r25, 7
    1fd4:	99 1f       	adc	r25, r25
    1fd6:	61 f0       	breq	.+24     	; 0x1ff0 <__fp_splitA+0x20>
    1fd8:	9f 3f       	cpi	r25, 0xFF	; 255
    1fda:	79 f0       	breq	.+30     	; 0x1ffa <__fp_splitA+0x2a>
    1fdc:	87 95       	ror	r24
    1fde:	08 95       	ret
    1fe0:	12 16       	cp	r1, r18
    1fe2:	13 06       	cpc	r1, r19
    1fe4:	14 06       	cpc	r1, r20
    1fe6:	55 1f       	adc	r21, r21
    1fe8:	f2 cf       	rjmp	.-28     	; 0x1fce <__fp_split3+0xe>
    1fea:	46 95       	lsr	r20
    1fec:	f1 df       	rcall	.-30     	; 0x1fd0 <__fp_splitA>
    1fee:	08 c0       	rjmp	.+16     	; 0x2000 <__fp_splitA+0x30>
    1ff0:	16 16       	cp	r1, r22
    1ff2:	17 06       	cpc	r1, r23
    1ff4:	18 06       	cpc	r1, r24
    1ff6:	99 1f       	adc	r25, r25
    1ff8:	f1 cf       	rjmp	.-30     	; 0x1fdc <__fp_splitA+0xc>
    1ffa:	86 95       	lsr	r24
    1ffc:	71 05       	cpc	r23, r1
    1ffe:	61 05       	cpc	r22, r1
    2000:	08 94       	sec
    2002:	08 95       	ret

00002004 <__fp_zero>:
    2004:	e8 94       	clt

00002006 <__fp_szero>:
    2006:	bb 27       	eor	r27, r27
    2008:	66 27       	eor	r22, r22
    200a:	77 27       	eor	r23, r23
    200c:	cb 01       	movw	r24, r22
    200e:	97 f9       	bld	r25, 7
    2010:	08 95       	ret

00002012 <__gesf2>:
    2012:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__fp_cmp>
    2016:	08 f4       	brcc	.+2      	; 0x201a <__gesf2+0x8>
    2018:	8f ef       	ldi	r24, 0xFF	; 255
    201a:	08 95       	ret

0000201c <__mulsf3>:
    201c:	0e 94 21 10 	call	0x2042	; 0x2042 <__mulsf3x>
    2020:	0c 94 cf 0f 	jmp	0x1f9e	; 0x1f9e <__fp_round>
    2024:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <__fp_pscA>
    2028:	38 f0       	brcs	.+14     	; 0x2038 <__mulsf3+0x1c>
    202a:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__fp_pscB>
    202e:	20 f0       	brcs	.+8      	; 0x2038 <__mulsf3+0x1c>
    2030:	95 23       	and	r25, r21
    2032:	11 f0       	breq	.+4      	; 0x2038 <__mulsf3+0x1c>
    2034:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_inf>
    2038:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_nan>
    203c:	11 24       	eor	r1, r1
    203e:	0c 94 03 10 	jmp	0x2006	; 0x2006 <__fp_szero>

00002042 <__mulsf3x>:
    2042:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__fp_split3>
    2046:	70 f3       	brcs	.-36     	; 0x2024 <__mulsf3+0x8>

00002048 <__mulsf3_pse>:
    2048:	95 9f       	mul	r25, r21
    204a:	c1 f3       	breq	.-16     	; 0x203c <__mulsf3+0x20>
    204c:	95 0f       	add	r25, r21
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	55 1f       	adc	r21, r21
    2052:	62 9f       	mul	r22, r18
    2054:	f0 01       	movw	r30, r0
    2056:	72 9f       	mul	r23, r18
    2058:	bb 27       	eor	r27, r27
    205a:	f0 0d       	add	r31, r0
    205c:	b1 1d       	adc	r27, r1
    205e:	63 9f       	mul	r22, r19
    2060:	aa 27       	eor	r26, r26
    2062:	f0 0d       	add	r31, r0
    2064:	b1 1d       	adc	r27, r1
    2066:	aa 1f       	adc	r26, r26
    2068:	64 9f       	mul	r22, r20
    206a:	66 27       	eor	r22, r22
    206c:	b0 0d       	add	r27, r0
    206e:	a1 1d       	adc	r26, r1
    2070:	66 1f       	adc	r22, r22
    2072:	82 9f       	mul	r24, r18
    2074:	22 27       	eor	r18, r18
    2076:	b0 0d       	add	r27, r0
    2078:	a1 1d       	adc	r26, r1
    207a:	62 1f       	adc	r22, r18
    207c:	73 9f       	mul	r23, r19
    207e:	b0 0d       	add	r27, r0
    2080:	a1 1d       	adc	r26, r1
    2082:	62 1f       	adc	r22, r18
    2084:	83 9f       	mul	r24, r19
    2086:	a0 0d       	add	r26, r0
    2088:	61 1d       	adc	r22, r1
    208a:	22 1f       	adc	r18, r18
    208c:	74 9f       	mul	r23, r20
    208e:	33 27       	eor	r19, r19
    2090:	a0 0d       	add	r26, r0
    2092:	61 1d       	adc	r22, r1
    2094:	23 1f       	adc	r18, r19
    2096:	84 9f       	mul	r24, r20
    2098:	60 0d       	add	r22, r0
    209a:	21 1d       	adc	r18, r1
    209c:	82 2f       	mov	r24, r18
    209e:	76 2f       	mov	r23, r22
    20a0:	6a 2f       	mov	r22, r26
    20a2:	11 24       	eor	r1, r1
    20a4:	9f 57       	subi	r25, 0x7F	; 127
    20a6:	50 40       	sbci	r21, 0x00	; 0
    20a8:	9a f0       	brmi	.+38     	; 0x20d0 <__mulsf3_pse+0x88>
    20aa:	f1 f0       	breq	.+60     	; 0x20e8 <__mulsf3_pse+0xa0>
    20ac:	88 23       	and	r24, r24
    20ae:	4a f0       	brmi	.+18     	; 0x20c2 <__mulsf3_pse+0x7a>
    20b0:	ee 0f       	add	r30, r30
    20b2:	ff 1f       	adc	r31, r31
    20b4:	bb 1f       	adc	r27, r27
    20b6:	66 1f       	adc	r22, r22
    20b8:	77 1f       	adc	r23, r23
    20ba:	88 1f       	adc	r24, r24
    20bc:	91 50       	subi	r25, 0x01	; 1
    20be:	50 40       	sbci	r21, 0x00	; 0
    20c0:	a9 f7       	brne	.-22     	; 0x20ac <__mulsf3_pse+0x64>
    20c2:	9e 3f       	cpi	r25, 0xFE	; 254
    20c4:	51 05       	cpc	r21, r1
    20c6:	80 f0       	brcs	.+32     	; 0x20e8 <__mulsf3_pse+0xa0>
    20c8:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_inf>
    20cc:	0c 94 03 10 	jmp	0x2006	; 0x2006 <__fp_szero>
    20d0:	5f 3f       	cpi	r21, 0xFF	; 255
    20d2:	e4 f3       	brlt	.-8      	; 0x20cc <__mulsf3_pse+0x84>
    20d4:	98 3e       	cpi	r25, 0xE8	; 232
    20d6:	d4 f3       	brlt	.-12     	; 0x20cc <__mulsf3_pse+0x84>
    20d8:	86 95       	lsr	r24
    20da:	77 95       	ror	r23
    20dc:	67 95       	ror	r22
    20de:	b7 95       	ror	r27
    20e0:	f7 95       	ror	r31
    20e2:	e7 95       	ror	r30
    20e4:	9f 5f       	subi	r25, 0xFF	; 255
    20e6:	c1 f7       	brne	.-16     	; 0x20d8 <__mulsf3_pse+0x90>
    20e8:	fe 2b       	or	r31, r30
    20ea:	88 0f       	add	r24, r24
    20ec:	91 1d       	adc	r25, r1
    20ee:	96 95       	lsr	r25
    20f0:	87 95       	ror	r24
    20f2:	97 f9       	bld	r25, 7
    20f4:	08 95       	ret

000020f6 <__udivmodqi4>:
    20f6:	99 1b       	sub	r25, r25
    20f8:	79 e0       	ldi	r23, 0x09	; 9
    20fa:	04 c0       	rjmp	.+8      	; 0x2104 <__udivmodqi4_ep>

000020fc <__udivmodqi4_loop>:
    20fc:	99 1f       	adc	r25, r25
    20fe:	96 17       	cp	r25, r22
    2100:	08 f0       	brcs	.+2      	; 0x2104 <__udivmodqi4_ep>
    2102:	96 1b       	sub	r25, r22

00002104 <__udivmodqi4_ep>:
    2104:	88 1f       	adc	r24, r24
    2106:	7a 95       	dec	r23
    2108:	c9 f7       	brne	.-14     	; 0x20fc <__udivmodqi4_loop>
    210a:	80 95       	com	r24
    210c:	08 95       	ret

0000210e <__udivmodhi4>:
    210e:	aa 1b       	sub	r26, r26
    2110:	bb 1b       	sub	r27, r27
    2112:	51 e1       	ldi	r21, 0x11	; 17
    2114:	07 c0       	rjmp	.+14     	; 0x2124 <__udivmodhi4_ep>

00002116 <__udivmodhi4_loop>:
    2116:	aa 1f       	adc	r26, r26
    2118:	bb 1f       	adc	r27, r27
    211a:	a6 17       	cp	r26, r22
    211c:	b7 07       	cpc	r27, r23
    211e:	10 f0       	brcs	.+4      	; 0x2124 <__udivmodhi4_ep>
    2120:	a6 1b       	sub	r26, r22
    2122:	b7 0b       	sbc	r27, r23

00002124 <__udivmodhi4_ep>:
    2124:	88 1f       	adc	r24, r24
    2126:	99 1f       	adc	r25, r25
    2128:	5a 95       	dec	r21
    212a:	a9 f7       	brne	.-22     	; 0x2116 <__udivmodhi4_loop>
    212c:	80 95       	com	r24
    212e:	90 95       	com	r25
    2130:	bc 01       	movw	r22, r24
    2132:	cd 01       	movw	r24, r26
    2134:	08 95       	ret

00002136 <__divmodsi4>:
    2136:	05 2e       	mov	r0, r21
    2138:	97 fb       	bst	r25, 7
    213a:	1e f4       	brtc	.+6      	; 0x2142 <__divmodsi4+0xc>
    213c:	00 94       	com	r0
    213e:	0e 94 b2 10 	call	0x2164	; 0x2164 <__negsi2>
    2142:	57 fd       	sbrc	r21, 7
    2144:	07 d0       	rcall	.+14     	; 0x2154 <__divmodsi4_neg2>
    2146:	0e 94 c9 10 	call	0x2192	; 0x2192 <__udivmodsi4>
    214a:	07 fc       	sbrc	r0, 7
    214c:	03 d0       	rcall	.+6      	; 0x2154 <__divmodsi4_neg2>
    214e:	4e f4       	brtc	.+18     	; 0x2162 <__divmodsi4_exit>
    2150:	0c 94 b2 10 	jmp	0x2164	; 0x2164 <__negsi2>

00002154 <__divmodsi4_neg2>:
    2154:	50 95       	com	r21
    2156:	40 95       	com	r20
    2158:	30 95       	com	r19
    215a:	21 95       	neg	r18
    215c:	3f 4f       	sbci	r19, 0xFF	; 255
    215e:	4f 4f       	sbci	r20, 0xFF	; 255
    2160:	5f 4f       	sbci	r21, 0xFF	; 255

00002162 <__divmodsi4_exit>:
    2162:	08 95       	ret

00002164 <__negsi2>:
    2164:	90 95       	com	r25
    2166:	80 95       	com	r24
    2168:	70 95       	com	r23
    216a:	61 95       	neg	r22
    216c:	7f 4f       	sbci	r23, 0xFF	; 255
    216e:	8f 4f       	sbci	r24, 0xFF	; 255
    2170:	9f 4f       	sbci	r25, 0xFF	; 255
    2172:	08 95       	ret

00002174 <__umulhisi3>:
    2174:	a2 9f       	mul	r26, r18
    2176:	b0 01       	movw	r22, r0
    2178:	b3 9f       	mul	r27, r19
    217a:	c0 01       	movw	r24, r0
    217c:	a3 9f       	mul	r26, r19
    217e:	70 0d       	add	r23, r0
    2180:	81 1d       	adc	r24, r1
    2182:	11 24       	eor	r1, r1
    2184:	91 1d       	adc	r25, r1
    2186:	b2 9f       	mul	r27, r18
    2188:	70 0d       	add	r23, r0
    218a:	81 1d       	adc	r24, r1
    218c:	11 24       	eor	r1, r1
    218e:	91 1d       	adc	r25, r1
    2190:	08 95       	ret

00002192 <__udivmodsi4>:
    2192:	a1 e2       	ldi	r26, 0x21	; 33
    2194:	1a 2e       	mov	r1, r26
    2196:	aa 1b       	sub	r26, r26
    2198:	bb 1b       	sub	r27, r27
    219a:	fd 01       	movw	r30, r26
    219c:	0d c0       	rjmp	.+26     	; 0x21b8 <__udivmodsi4_ep>

0000219e <__udivmodsi4_loop>:
    219e:	aa 1f       	adc	r26, r26
    21a0:	bb 1f       	adc	r27, r27
    21a2:	ee 1f       	adc	r30, r30
    21a4:	ff 1f       	adc	r31, r31
    21a6:	a2 17       	cp	r26, r18
    21a8:	b3 07       	cpc	r27, r19
    21aa:	e4 07       	cpc	r30, r20
    21ac:	f5 07       	cpc	r31, r21
    21ae:	20 f0       	brcs	.+8      	; 0x21b8 <__udivmodsi4_ep>
    21b0:	a2 1b       	sub	r26, r18
    21b2:	b3 0b       	sbc	r27, r19
    21b4:	e4 0b       	sbc	r30, r20
    21b6:	f5 0b       	sbc	r31, r21

000021b8 <__udivmodsi4_ep>:
    21b8:	66 1f       	adc	r22, r22
    21ba:	77 1f       	adc	r23, r23
    21bc:	88 1f       	adc	r24, r24
    21be:	99 1f       	adc	r25, r25
    21c0:	1a 94       	dec	r1
    21c2:	69 f7       	brne	.-38     	; 0x219e <__udivmodsi4_loop>
    21c4:	60 95       	com	r22
    21c6:	70 95       	com	r23
    21c8:	80 95       	com	r24
    21ca:	90 95       	com	r25
    21cc:	9b 01       	movw	r18, r22
    21ce:	ac 01       	movw	r20, r24
    21d0:	bd 01       	movw	r22, r26
    21d2:	cf 01       	movw	r24, r30
    21d4:	08 95       	ret

000021d6 <eeprom_read_byte>:
    21d6:	f9 99       	sbic	0x1f, 1	; 31
    21d8:	fe cf       	rjmp	.-4      	; 0x21d6 <eeprom_read_byte>
    21da:	92 bd       	out	0x22, r25	; 34
    21dc:	81 bd       	out	0x21, r24	; 33
    21de:	f8 9a       	sbi	0x1f, 0	; 31
    21e0:	99 27       	eor	r25, r25
    21e2:	80 b5       	in	r24, 0x20	; 32
    21e4:	08 95       	ret

000021e6 <eeprom_write_byte>:
    21e6:	26 2f       	mov	r18, r22

000021e8 <eeprom_write_r18>:
    21e8:	f9 99       	sbic	0x1f, 1	; 31
    21ea:	fe cf       	rjmp	.-4      	; 0x21e8 <eeprom_write_r18>
    21ec:	1f ba       	out	0x1f, r1	; 31
    21ee:	92 bd       	out	0x22, r25	; 34
    21f0:	81 bd       	out	0x21, r24	; 33
    21f2:	20 bd       	out	0x20, r18	; 32
    21f4:	0f b6       	in	r0, 0x3f	; 63
    21f6:	f8 94       	cli
    21f8:	fa 9a       	sbi	0x1f, 2	; 31
    21fa:	f9 9a       	sbi	0x1f, 1	; 31
    21fc:	0f be       	out	0x3f, r0	; 63
    21fe:	01 96       	adiw	r24, 0x01	; 1
    2200:	08 95       	ret

00002202 <_exit>:
    2202:	f8 94       	cli

00002204 <__stop_program>:
    2204:	ff cf       	rjmp	.-2      	; 0x2204 <__stop_program>
